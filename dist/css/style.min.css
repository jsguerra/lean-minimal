/*!
 * gco-gulp-boilerplate
 * Fiercely quick and opinionated front-ends
 * 
 * @author Jose Guerra
 * @version 2.0.0
 * Copyright 2018. MIT licensed.
 */
/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}[hidden],template{display:none}h1,h2,h3,h4,h5,h6{font-family:Verdana,Geneva,sans-serif;color:#787065;line-height:1.25em;font-weight:400}.h1,h1{font-size:2.5rem}.h2,h2{font-size:1.92308rem}.h3,h3{font-size:1.66667rem}.h4,h4{font-size:1.47059rem}.h5,h5{font-size:1.38889rem}.h6,h6{font-size:1.25rem}.h1,.h2,.h3,.h4,.h5,.h6{font-family:Georgia,serif;font-weight:700}.h1,.h2{line-height:1.1}.h3,.h4{line-height:1.3}.h1{font-size:400%;letter-spacing:-2px}.h2{font-size:250%;letter-spacing:-1px}.h3{font-size:200%}.h4{font-size:180%}.h5{font-size:130%}ol,ul{margin:1.5em 0 0 20px}ol li,ul li{margin-top:10px;line-height:1.5em;color:#363431}ol ol,ol ul,ul ol,ul ul{margin-top:0}ul li{list-style:disc}ul ul li{list-style:circle}ol li{list-style:decimal}blockquote{margin:2.25em 0;font-size:1.353rem;line-height:1.5em;color:#a09a92;text-align:left;font-style:italic;padding-left:2em}blockquote cite{font-style:normal;display:block}blockquote cite:before{content:"-- "}.italic,em,i{font-style:italic}.bold,b,strong{font-weight:700}.drop-cap p:first-child:first-letter{color:#b7b1a9;float:left;font-family:Georgia,serif;font-size:75px;line-height:60px;padding-top:4px;padding-right:8px;padding-left:3px}.drop-cap p:first-of-type:first-line{color:#787065;font-family:Georgia,serif;font-size:1em;font-style:normal!important;font-weight:700;letter-spacing:2px;text-transform:uppercase}.drop-cap p:first-of-type:after{clear:both;content:"";display:block}.drop-cap p:first-of-type+p{clear:left}a{color:#4eaff6;text-decoration:none}a:hover{color:#0b7fd3}figure{margin:2.25em 0}figure img{margin:0}figcaption{margin-top:10px;color:#514e49;font-size:1.2em}img{display:block;max-width:100%}img,table{margin:2.25em 0}table{width:100%;border-collapse:collapse}table,td,th{border:1px solid #f2f1ed;text-align:left}th{font-weight:700}td,th{padding:15px}.comment-content{border-top:1px solid #eaeaea;padding-top:36px}.comment-content figure{margin-top:0}.comment-content .gravatar{float:left}.comment-content .gravatar img.avatar{max-width:72px;max-height:72px;display:block;-webkit-border-radius:50%;-webkit-background-clip:padding-box;-moz-border-radius:50%;-moz-background-clip:padding;border-radius:50%;background-clip:padding-box;margin:0 auto}.comment-meta-item span,.comment-meta-item span a{font-size:14px}div.comment-meta.post-meta{margin-left:90px;padding:0 18px 18px;position:relative}div.comment-meta.post-meta .comment-reply-link{position:absolute;top:0;right:0}section.child-comments.comments-list{padding-left:90px}.comment-form .comment-figure{float:left;width:90px}label{font-size:14px;line-height:1.75;margin:18px 0 0;margin:0 0 5px}form p{margin:18px 0 0;font-weight:600}form img.ajax-loader{position:absolute;left:50%;margin-left:-30px!important;bottom:-25px}.seldiv,.select2-choice,.select2-selection--single,input,select,textarea{display:block;font-size:14px;line-height:normal;margin:9px 0 0;padding:10px 15px;border-width:1px;border-style:solid;border-radius:2px;font-weight:400;border:1px solid #eaeaea}input:focus,select:focus,textarea:focus{outline:0;border-style:solid}button[type=submit],input[type=button],input[type=reset],input[type=submit]{display:inline-block;transition:all .2s ease-in-out;font-size:12px;padding:13px 31px;text-align:center!important;vertical-align:middle;background-image:none;border-radius:2px;outline:none;white-space:nowrap;-webkit-text-stroke:0;width:auto;box-shadow:none;cursor:pointer;-webkit-font-smoothing:antialiased}input[type=checkbox],input[type=radio]{box-sizing:content-box;display:inline-block;font-size:1em;-webkit-appearance:none;margin:0;padding-left:8px;padding-right:8px;position:relative;text-align:center;line-height:normal}input[type=checkbox]:checked:before,input[type=radio]:checked:before{box-sizing:border-box;font-family:uncodeicon;margin:auto;position:absolute;top:0;left:0;bottom:0;right:0;line-height:1.2em}input[type=radio]{border-radius:50%}input[type=radio]:checked:before{content:"";border-radius:100%;width:50%;height:50%}input[type=checkbox]:checked:before{content:"\f00c"}input[type=file],input[type=range]{background-color:transparent!important;padding:0;border:0;box-shadow:none;width:auto}input[type=search]{box-sizing:border-box;-webkit-appearance:none}textarea{width:100%;resize:none;border:1px solid #eaeaea}select{width:100%;max-width:100%;min-width:100%;-webkit-appearance:none;appearance:none;border-style:solid;border-color:transparent;-moz-appearance:none;text-overflow:"";background-position:100%;background-repeat:no-repeat;box-shadow:none!important}select,select:focus{outline:none}select::-ms-expand{display:none}button[disabled],html input[disabled]{cursor:not-allowed}*,body,html{font-size:17px;font-family:Georgia,serif;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}body{background-color:#edeff1;color:#363431;line-height:1.5}.wrapper{width:100%;max-width:1200px;margin:0 auto}.screen-reader-text:focus{font-size:1.4rem}.alignnone{margin:5px 20px 20px 0}.aligncenter,div.aligncenter{display:block;margin:5px auto}.alignright{float:right;margin:5px 0 20px 20px}.alignleft{float:left;margin:5px 20px 20px 0}a img.alignright{float:right;margin:5px 0 20px 20px}a img.alignleft,a img.alignnone{margin:5px 20px 20px 0}a img.alignleft{float:left}a img.aligncenter{display:block;margin-left:auto;margin-right:auto}.wp-caption{background:#fff;border:1px solid #f0f0f0;max-width:96%;padding:5px 3px 10px;text-align:center}.wp-caption.alignleft,.wp-caption.alignnone{margin:5px 20px 20px 0}.wp-caption.alignright{margin:5px 0 20px 20px}.wp-caption img{border:0 none;height:auto;margin:0;max-width:98.5%;padding:0;width:auto}.wp-caption p.wp-caption-text{font-size:11px;line-height:17px;margin:0;padding:0 4px 5px}.screen-reader-text{clip:rect(1px,1px,1px,1px);position:absolute!important;white-space:nowrap;height:1px;width:1px;overflow:hidden}.screen-reader-text:focus{background-color:#f1f1f1;border-radius:3px;box-shadow:0 0 2px 2px rgba(0,0,0,.6);clip:auto!important;color:#21759b;display:block;font-size:14px;font-size:.875rem;font-weight:700;height:auto;left:5px;line-height:normal;padding:15px 23px 14px;text-decoration:none;top:5px;width:auto;z-index:3}.site-header .site-branding{max-width:25%;padding-left:10px;float:left}.site-header .site-branding a{color:#fff}.site-header .site-branding a:hover{color:#000}.site-header .site-branding .site-title{font-size:2.2em;margin:0}.site-header .title-block{margin:3rem auto;max-width:740px;padding:0;width:auto;text-align:center}.site-header .title-block .site-title{margin:0;color:#787065}.site-header .title-block .site-description{font-size:1.2rem;color:#a09a92;margin:0}.nav-bar{background-color:#1abc9c;overflow:auto}.nav-bar a{font-family:Verdana,Geneva,sans-serif;text-decoration:none}nav{float:right}nav ul{list-style:none;margin:0;padding:0}nav ul li{list-style:none;float:left;position:relative;margin-top:0}nav ul li a{display:block;padding:0 10px;line-height:62px;color:#fff;text-decoration:none}nav ul li a:hover{background:#ecf0f1;color:#000}nav ul li ul li{min-width:190px}nav ul li ul li a{padding:15px;line-height:20px;z-index:1}.nav-dropdown{z-index:1;box-shadow:0 3px 12px rgba(0,0,0,.15)}.nav-dropdown,.nav-mobile{position:absolute;display:none}.nav-mobile{top:0;right:0;background:#ecf0f1;height:62px;width:62px}#nav-toggle{position:absolute;left:18px;top:17px;cursor:pointer;padding:10px 35px 16px 0}#nav-toggle span,#nav-toggle span:after,#nav-toggle span:before{cursor:pointer;border-radius:1px;height:5px;width:35px;background:#787065;position:absolute;display:block;content:"";transition:all .3s ease-in-out}#nav-toggle span:before{top:-10px}#nav-toggle span:after{bottom:-10px}#nav-toggle.active span{background-color:transparent}#nav-toggle.active span:after,#nav-toggle.active span:before{top:0}#nav-toggle.active span:before{transform:rotate(45deg)}#nav-toggle.active span:after{transform:rotate(-45deg)}@media only screen and (max-width:800px){.nav-mobile{display:block}nav{width:100%;padding:3px 0 10px}nav ul{display:none;text-align:center}nav ul li{float:none}nav ul li a{padding:15px;line-height:20px}nav ul li ul li a{padding-left:30px}.nav-dropdown{position:static}}@media screen and (min-width:800px){.nav-list{display:block!important}}.navbar{height:62px;position:fixed;width:100%;top:0;z-index:2}.navbar a{font-family:Verdana,Geneva,sans-serif;font-size:14px}.container{max-width:960px;margin:0 auto}.brand{position:absolute;padding-left:20px;float:left;line-height:62px;text-transform:uppercase;font-size:1.4em}.brand a,.brand a:visited{color:#fff;text-decoration:none}.content-area{margin:3rem auto;max-width:740px;padding:0;width:auto}.post{background-color:#fff;box-shadow:2px 2px 6px 0 rgba(0,0,0,.05)}.post .entry-header{padding:3em 3em 0;text-align:center}.post .entry-header .entry-meta{color:#a09a92}.post .entry-header .entry-title{font-family:Georgia,serif;margin-top:0;color:#787065}.post .entry-header .entry-title a{font-size:2.5rem;color:#787065;text-decoration:none}.post .entry-header .entry-title a:hover{color:#4eaff6}.post .entry-content{padding:0 3em 1em}.post .entry-content p{font-size:20px;line-height:1.618}.post .entry-footer{color:#a09a92;padding:0 3em 3em}.more-link,.more-link:visited{color:#a09a92;display:inline-block;font-style:italic;text-align:center;text-transform:lowercase;width:100%;text-decoration:none}.more-link:hover{color:#4eaff6}.more-link:before{content:"{"}.more-link:after,.more-link:before{display:inline;font-size:1.5em;font-style:normal;padding:0 10px;vertical-align:-.15em}.more-link:after{content:"}"}.pagination{margin-top:2rem;overflow:auto}.pagination .previous{float:left;width:50%;text-align:left}.pagination .next{float:right;width:50%;text-align:right}.pagination a{text-decoration:none;color:#a09a92;text-transform:uppercase}.pagination a:hover{color:#4eaff6}.pagination a .meta-nav{font-size:14px}.next .meta-nav a:after,.next a .meta-nav:after,.previous .meta-nav a:before,.previous a .meta-nav:before{border:4px solid transparent;content:"";display:inline-block;height:0;margin:0 .5rem;top:.8em;width:0}.previous .meta-nav a:before,.previous a .meta-nav:before{border-left:0;border-right-color:#a09a92}.next .meta-nav a:after,.next a .meta-nav:after{border-left-color:#a09a92;border-right:0}article+article{margin-top:6rem}.page{background-color:#faf9f5;box-shadow:2px 2px 6px 0 rgba(0,0,0,.05);padding:3em}.page .entry-header{padding:3em 3em 0;text-align:center}.page .entry-header .entry-meta{color:#a09a92}.page .entry-header .entry-title{font-family:Georgia,serif;margin-top:0;color:#787065}.page .entry-header .entry-title a{font-size:2.5rem;color:#787065;text-decoration:none}.page .entry-header .entry-title a:hover{color:#4eaff6}.page .entry-content{padding:0 3em 1em}.page .entry-content p{font-size:20px;line-height:1.618}.page .entry-footer{color:#a09a92;padding:0 3em 3em}.shadow-box{background-color:#fff;margin-top:2rem;padding:1em 3em 3em;box-shadow:2px 2px 6px 0 rgba(0,0,0,.05)}.site-info{font-size:14px;color:#787065;margin:1rem auto;max-width:680px;padding:0;width:auto;text-align:center}.site-footer{border-top:1px solid #eae9e6;overflow:auto}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlbmRvci9fbm9ybWFsaXplLnNjc3MiLCJzdHlsZS5jc3MiLCJwYXJ0aWFscy9fdHlwb2dyYXBoeS5zY3NzIiwicGFydGlhbHMvX3ZhcmlhYmxlcy5zY3NzIiwicGFydGlhbHMvX2VsZW1lbnRzLnNjc3MiLCJwYXJ0aWFscy9fY29tbWVudHMuc2NzcyIsInBhcnRpYWxzL19mb3Jtcy5zY3NzIiwicGFydGlhbHMvX2RlZmF1bHRzLnNjc3MiLCJtb2R1bGVzL19oZWFkZXIuc2NzcyIsIm1vZHVsZXMvX25hdmlnYXRpb24uc2NzcyIsIm1vZHVsZXMvX21haW4uc2NzcyIsIm1vZHVsZXMvX3BhZ2Uuc2NzcyIsIm1vZHVsZXMvX3Bvc3Quc2NzcyIsIm1vZHVsZXMvX2Zvb3Rlci5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsNEVBQTRFLEFBVzVFLEtBQ0UsaUJBQWlCLEFBQ2pCLDBCQUEwQixBQUMxQiw2QkFBOEIsQ0FDL0IsQUFTRCxLQUNFLFFBQVMsQ0FDVixBQU1ELHdDQU1FLGFBQWMsQ0FDZixBQU9ELEdBQ0UsY0FBYyxBQUNkLGNBQWdCLENBQ2pCLEFBVUQsdUJBR0UsYUFBYyxDQUNmLEFBTUQsT0FDRSxlQUFnQixDQUNqQixBQU9ELEdBQ0UsdUJBQXVCLEFBQ3ZCLFNBQVMsQUFDVCxnQkFBaUIsQ0FDbEIsQUFPRCxJQUNFLGdDQUFpQyxBQUNqQyxhQUFjLENBQ2YsQUFVRCxFQUNFLDZCQUE2QixBQUM3QixvQ0FBcUMsQ0FDdEMsQUFPRCxZQUNFLG1CQUFtQixBQUNuQiwwQkFBMEIsQUFDMUIsZ0NBQWlDLENBQ2xDLEFBTUQsU0FFRSxvQkFBb0IsQUFTcEIsa0JBQW1CLENBUnBCLEFBZ0JELGNBR0UsZ0NBQWlDLEFBQ2pDLGFBQWMsQ0FDZixBQU1ELElBQ0UsaUJBQWtCLENBQ25CLEFBTUQsS0FDRSxzQkFBc0IsQUFDdEIsVUFBVyxDQUNaLEFBTUQsTUFDRSxhQUFjLENBQ2YsQUFPRCxRQUVFLGNBQWMsQUFDZCxjQUFjLEFB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LENBQ2xCLEFBSVQsMEdBSUUsNkJBQTZCLEFBQzdCLFdBQVcsQUFDWCxxQkFBcUIsQUFDckIsU0FBUyxBQUNULGVBQWdCLEFBQ2hCLFNBQVUsQUFDVixPQUFRLENBQ1QsQUFFRCwwREFFRSxjQUFjLEFBQ2QsMEJQMUkrQixDTzJJaEMsQUFFRCxnREFFRSwwQlAvSStCLEFPZ0ovQixjQUFlLENBQ2hCLEFBR0QsZ0JBQ0UsZUFBZ0IsQ0FDakIsQUM1SkQsTUFDSSx5QlJDNkIsQVFFN0IseUNBQTRDLEFBQzVDLFdBQW9CLENBTHhCLEFBNkNDLG9CQXJDTyxrQkFBa0IsQUFDbEIsaUJBQWtCLENBVDFCLEFBOEJLLGdDQWxCTyxhUk5xQixDUU5qQyxBQWFTLGlDQUdHLDBCUkg0QixBUUk1QixhQUFhLEFBQ2IsYVJYcUIsQ1FQakMsQUE2QlMsbUNBUk8saUJSa0JnQixBUWpCaEIsY1JmaUIsQVFnQmpCLG9CQUFxQixDQXZCckMsQUE0QmEseUNBRk8sYVJ3QmEsQ1FsRGpDLEFBMkJpQixxQkFNVCxpQkFBa0IsQ0FqQzFCLEFBdUNLLHVCQUhPLGVBQWUsQUFDZixpQkFBa0IsQ0FyQzlCLEFBc0NTLG9CQUlELGNScEN5QixBUXFDekIsaUJBQWtCLENBQ3JCLEFDNUNMLFlBQ0ksc0JBQXVCLEFBQ3ZCLGdCQUFnQixBQUNoQixvQkFBb0IsQUFHcEIsd0NBQTRDLENBQy9DLEFDUEQsV0FDSSxlQUFlLEFBQ2YsY1ZLNkIsQVVKN0IsaUJBQWlCLEFBQ2pCLGdCQUFnQixBQUNoQixVQUFVLEFBQ1YsV0FBVyxBQUNYLGlCQUFrQixDQUNyQixBQUVELGFBQ0ksNkJWUDZCLEFVUTdCLGFBQWMsQ0FDakIiLCJmaWxlIjoic3R5bGUubWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBub3JtYWxpemUuY3NzIHY3LjAuMCB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cclxuXHJcbi8qIERvY3VtZW50XHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluXHJcbiAqICAgIElFIG9uIFdpbmRvd3MgUGhvbmUgYW5kIGluIGlPUy5cclxuICovXHJcblxyXG5odG1sIHtcclxuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xyXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXHJcbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXHJcbn1cclxuXHJcbi8qIFNlY3Rpb25zXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXHJcbiAqL1xyXG5cclxuYm9keSB7XHJcbiAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXHJcbiAqL1xyXG5cclxuYXJ0aWNsZSxcclxuYXNpZGUsXHJcbmZvb3RlcixcclxuaGVhZGVyLFxyXG5uYXYsXHJcbnNlY3Rpb24ge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4vKipcclxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxyXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxyXG4gKi9cclxuXHJcbmgxIHtcclxuICBmb250LXNpemU6IDJlbTtcclxuICBtYXJnaW46IDAuNjdlbSAwO1xyXG59XHJcblxyXG4vKiBHcm91cGluZyBjb250ZW50XHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXHJcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxyXG4gKi9cclxuXHJcbmZpZ2NhcHRpb24sXHJcbmZpZ3VyZSxcclxubWFpbiB7IC8qIDEgKi9cclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cclxuICovXHJcblxyXG5maWd1cmUge1xyXG4gIG1hcmdpbjogMWVtIDQwcHg7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxyXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cclxuICovXHJcblxyXG5ociB7XHJcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDEgKi9cclxuICBoZWlnaHQ6IDA7IC8qIDEgKi9cclxuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xyXG59XHJcblxyXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cclxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cclxuXHJcbnByZSB7XHJcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXHJcbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cclxufVxyXG5cclxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbi8qKlxyXG4gKiAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXHJcbiAqIDIuIFJlbW92ZSBnYXBzIGluIGxpbmtzIHVuZGVybGluZSBpbiBpT1MgOCsgYW5kIFNhZmFyaSA4Ky5cclxuICovXHJcblxyXG5hIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgLyogMSAqL1xyXG4gIC13ZWJraXQtdGV4dC1kZWNvcmF0aW9uLXNraXA6IG9iamVjdHM7IC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctIGFuZCBGaXJlZm94IDM5LS5cclxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cclxuICovXHJcblxyXG5hYmJyW3RpdGxlXSB7XHJcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xyXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXHJcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkOyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBQcmV2ZW50IHRoZSBkdXBsaWNhdGUgYXBwbGljYXRpb24gb2YgYGJvbGRlcmAgYnkgdGhlIG5leHQgcnVsZSBpbiBTYWZhcmkgNi5cclxuICovXHJcblxyXG5iLFxyXG5zdHJvbmcge1xyXG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xyXG59XHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cclxuICovXHJcblxyXG5iLFxyXG5zdHJvbmcge1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xyXG5cclxuY29kZSxcclxua2JkLFxyXG5zYW1wIHtcclxuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cclxuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xyXG59XHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc3R5bGUgaW4gQW5kcm9pZCA0LjMtLlxyXG4gKi9cclxuXHJcbmRmbiB7XHJcbiAgZm9udC1zdHlsZTogaXRhbGljO1xyXG59XHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGJhY2tncm91bmQgYW5kIGNvbG9yIGluIElFIDktLlxyXG4gKi9cclxuXHJcbm1hcmsge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjA7XHJcbiAgY29sb3I6ICMwMDA7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cclxuICovXHJcblxyXG5zbWFsbCB7XHJcbiAgZm9udC1zaXplOiA4MCU7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cclxuICogYWxsIGJyb3dzZXJzLlxyXG4gKi9cclxuXHJcbnN1Yixcclxuc3VwIHtcclxuICBmb250LXNpemU6IDc1JTtcclxuICBsaW5lLWhlaWdodDogMDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xyXG59XHJcblxyXG5zdWIge1xyXG4gIGJvdHRvbTogLTAuMjVlbTtcclxufVxyXG5cclxuc3VwIHtcclxuICB0b3A6IC0wLjVlbTtcclxufVxyXG5cclxuLyogRW1iZWRkZWQgY29udGVudFxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxyXG4gKi9cclxuXHJcbmF1ZGlvLFxyXG52aWRlbyB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG59XHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gaU9TIDQtNy5cclxuICovXHJcblxyXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbiAgaGVpZ2h0OiAwO1xyXG59XHJcblxyXG4vKipcclxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC0uXHJcbiAqL1xyXG5cclxuaW1nIHtcclxuICBib3JkZXItc3R5bGU6IG5vbmU7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBIaWRlIHRoZSBvdmVyZmxvdyBpbiBJRS5cclxuICovXHJcblxyXG5zdmc6bm90KDpyb290KSB7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxufVxyXG5cclxuLyogRm9ybXNcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbi8qKlxyXG4gKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxyXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXHJcbiAqL1xyXG5cclxuYnV0dG9uLFxyXG5pbnB1dCxcclxub3B0Z3JvdXAsXHJcbnNlbGVjdCxcclxudGV4dGFyZWEge1xyXG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOyAvKiAxICovXHJcbiAgZm9udC1zaXplOiAxMDAlOyAvKiAxICovXHJcbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cclxuICBtYXJnaW46IDA7IC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxyXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxyXG4gKi9cclxuXHJcbmJ1dHRvbixcclxuaW5wdXQgeyAvKiAxICovXHJcbiAgb3ZlcmZsb3c6IHZpc2libGU7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cclxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxyXG4gKi9cclxuXHJcbmJ1dHRvbixcclxuc2VsZWN0IHsgLyogMSAqL1xyXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xyXG59XHJcblxyXG4vKipcclxuICogMS4gUHJldmVudCBhIFdlYktpdCBidWcgd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gIGFuZCBgdmlkZW9gXHJcbiAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cclxuICogMi4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cclxuICovXHJcblxyXG5idXR0b24sXHJcbmh0bWwgW3R5cGU9XCJidXR0b25cIl0sIC8qIDEgKi9cclxuW3R5cGU9XCJyZXNldFwiXSxcclxuW3R5cGU9XCJzdWJtaXRcIl0ge1xyXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxyXG4gKi9cclxuXHJcbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcclxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXHJcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXHJcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcclxuICBib3JkZXItc3R5bGU6IG5vbmU7XHJcbiAgcGFkZGluZzogMDtcclxufVxyXG5cclxuLyoqXHJcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cclxuICovXHJcblxyXG5idXR0b246LW1vei1mb2N1c3JpbmcsXHJcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxyXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxyXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XHJcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xyXG59XHJcblxyXG4vKipcclxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxyXG4gKi9cclxuXHJcbmZpZWxkc2V0IHtcclxuICBwYWRkaW5nOiAwLjM1ZW0gMC43NWVtIDAuNjI1ZW07XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxyXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXHJcbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcclxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xyXG5cclxubGVnZW5kIHtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXHJcbiAgY29sb3I6IGluaGVyaXQ7IC8qIDIgKi9cclxuICBkaXNwbGF5OiB0YWJsZTsgLyogMSAqL1xyXG4gIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xyXG4gIHBhZGRpbmc6IDA7IC8qIDMgKi9cclxuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvKiAxICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cclxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cclxuICovXHJcblxyXG5wcm9ncmVzcyB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyAvKiAxICovXHJcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFLlxyXG4gKi9cclxuXHJcbnRleHRhcmVhIHtcclxuICBvdmVyZmxvdzogYXV0bztcclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLS5cclxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLS5cclxuICovXHJcblxyXG5bdHlwZT1cImNoZWNrYm94XCJdLFxyXG5bdHlwZT1cInJhZGlvXCJdIHtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXHJcbiAgcGFkZGluZzogMDsgLyogMiAqL1xyXG59XHJcblxyXG4vKipcclxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxyXG4gKi9cclxuXHJcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxyXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG59XHJcblxyXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXHJcbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxyXG4gKi9cclxuXHJcblt0eXBlPVwic2VhcmNoXCJdIHtcclxuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xyXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgYW5kIGNhbmNlbCBidXR0b25zIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxyXG4gKi9cclxuXHJcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxyXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XHJcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xyXG59XHJcblxyXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cclxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxyXG4gKi9cclxuXHJcbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xyXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXHJcbiAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xyXG59XHJcblxyXG4vKiBJbnRlcmFjdGl2ZVxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLypcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXHJcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cclxuICovXHJcblxyXG5kZXRhaWxzLCAvKiAxICovXHJcbm1lbnUge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4vKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xyXG5cclxuc3VtbWFyeSB7XHJcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xyXG59XHJcblxyXG4vKiBTY3JpcHRpbmdcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cclxuICovXHJcblxyXG5jYW52YXMge1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxyXG4gKi9cclxuXHJcbnRlbXBsYXRlIHtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4vKiBIaWRkZW5cclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC0uXHJcbiAqL1xyXG5cclxuW2hpZGRlbl0ge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuIiwiLyogVmVuZG9yICAgICAgICAgICAgKi9cbi8qISBub3JtYWxpemUuY3NzIHY3LjAuMCB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cbi8qIERvY3VtZW50XHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluXHJcbiAqICAgIElFIG9uIFdpbmRvd3MgUGhvbmUgYW5kIGluIGlPUy5cclxuICovXG5odG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovIH1cblxuLyogU2VjdGlvbnNcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxyXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cclxuICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwOyB9XG5cbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cclxuICovXG5hcnRpY2xlLFxuYXNpZGUsXG5mb290ZXIsXG5oZWFkZXIsXG5uYXYsXG5zZWN0aW9uIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLyoqXHJcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcclxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cclxuICovXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwOyB9XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cclxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXHJcbiAqL1xuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbm1haW4ge1xuICAvKiAxICovXG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgbWFyZ2luIGluIElFIDguXHJcbiAqL1xuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDsgfVxuXG4vKipcclxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cclxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXHJcbiAqL1xuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLyogMSAqL1xuICBoZWlnaHQ6IDA7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIC8qIDIgKi8gfVxuXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cclxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cbnByZSB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcclxuICogMS4gUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxyXG4gKiAyLiBSZW1vdmUgZ2FwcyBpbiBsaW5rcyB1bmRlcmxpbmUgaW4gaU9TIDgrIGFuZCBTYWZhcmkgOCsuXHJcbiAqL1xuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1kZWNvcmF0aW9uLXNraXA6IG9iamVjdHM7XG4gIC8qIDIgKi8gfVxuXG4vKipcclxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny0gYW5kIEZpcmVmb3ggMzktLlxyXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxyXG4gKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG4gIC8qIDIgKi8gfVxuXG4vKipcclxuICogUHJldmVudCB0aGUgZHVwbGljYXRlIGFwcGxpY2F0aW9uIG9mIGBib2xkZXJgIGJ5IHRoZSBuZXh0IHJ1bGUgaW4gU2FmYXJpIDYuXHJcbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0OyB9XG5cbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxyXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyOyB9XG5cbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi8gfVxuXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc3R5bGUgaW4gQW5kcm9pZCA0LjMtLlxyXG4gKi9cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGJhY2tncm91bmQgYW5kIGNvbG9yIGluIElFIDktLlxyXG4gKi9cbm1hcmsge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYwO1xuICBjb2xvcjogIzAwMDsgfVxuXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xuc21hbGwge1xuICBmb250LXNpemU6IDgwJTsgfVxuXG4vKipcclxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXHJcbiAqIGFsbCBicm93c2Vycy5cclxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTsgfVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXHJcbiAqL1xuYXVkaW8sXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gaU9TIDQtNy5cclxuICovXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7IH1cblxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxyXG4gKi9cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTsgfVxuXG4vKipcclxuICogSGlkZSB0aGUgb3ZlcmZsb3cgaW4gSUUuXHJcbiAqL1xuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG5cbi8qIEZvcm1zXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcclxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cclxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxyXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLyogMSAqL1xuICBtYXJnaW46IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcclxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXHJcbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXHJcbiAqL1xuYnV0dG9uLFxuaW5wdXQge1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyB9XG5cbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cclxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxyXG4gKi9cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXHJcbiAqIDEuIFByZXZlbnQgYSBXZWJLaXQgYnVnIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYCBhbmQgYHZpZGVvYFxyXG4gKiAgICBjb250cm9scyBpbiBBbmRyb2lkIDQuXHJcbiAqIDIuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXHJcbiAqL1xuYnV0dG9uLFxuaHRtbCBbdHlwZT1cImJ1dHRvblwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAyICovIH1cblxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXHJcbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyoqXHJcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cclxuICovXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDsgfVxuXG4vKipcclxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxyXG4gKi9cbmZpZWxkc2V0IHtcbiAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtOyB9XG5cbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxyXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXHJcbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcclxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAvKiAxICovIH1cblxuLyoqXHJcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxyXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxyXG4gKi9cbnByb2dyZXNzIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAvKiAxICovXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgLyogMiAqLyB9XG5cbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFLlxyXG4gKi9cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cblxuLyoqXHJcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLS5cclxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLS5cclxuICovXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxyXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXHJcbiAqL1xuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bzsgfVxuXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXHJcbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxyXG4gKi9cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG4gIC8qIDIgKi8gfVxuXG4vKipcclxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cclxuICovXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxyXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXHJcbiAqL1xuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi8gfVxuXG4vKiBJbnRlcmFjdGl2ZVxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLypcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXHJcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cclxuICovXG5kZXRhaWxzLFxubWVudSB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cclxuICovXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtOyB9XG5cbi8qIFNjcmlwdGluZ1xyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxyXG4gKi9cbmNhbnZhcyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXHJcbiAqL1xudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi8qIEhpZGRlblxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cclxuICovXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyogUGFydGlhbHMgICAgICAgICAgKi9cbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYge1xuICBmb250LWZhbWlseTogVmVyZGFuYSwgR2VuZXZhLCBzYW5zLXNlcmlmO1xuICBjb2xvcjogIzc4NzA2NTtcbiAgbGluZS1oZWlnaHQ6IDEuMjVlbTtcbiAgZm9udC13ZWlnaHQ6IDQwMDsgfVxuXG5oMSwgLmgxIHtcbiAgZm9udC1zaXplOiAyLjVyZW07IH1cblxuaDIsIC5oMiB7XG4gIGZvbnQtc2l6ZTogMS45MjMwOHJlbTsgfVxuXG5oMywgLmgzIHtcbiAgZm9udC1zaXplOiAxLjY2NjY3cmVtOyB9XG5cbmg0LCAuaDQge1xuICBmb250LXNpemU6IDEuNDcwNTlyZW07IH1cblxuaDUsIC5oNSB7XG4gIGZvbnQtc2l6ZTogMS4zODg4OXJlbTsgfVxuXG5oNiwgLmg2IHtcbiAgZm9udC1zaXplOiAxLjI1cmVtOyB9XG5cbi5oMSwgLmgyLCAuaDMsIC5oNCwgLmg1LCAuaDYge1xuICBmb250LWZhbWlseTogR2VvcmdpYSwgc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7IH1cblxuLmgxLCAuaDIge1xuICBsaW5lLWhlaWdodDogMS4xOyB9XG5cbi5oMywgLmg0IHtcbiAgbGluZS1oZWlnaHQ6IDEuMzsgfVxuXG4uaDEge1xuICBmb250LXNpemU6IDQwMCU7XG4gIGxldHRlci1zcGFjaW5nOiAtMnB4OyB9XG5cbi5oMiB7XG4gIGZvbnQtc2l6ZTogMjUwJTtcbiAgbGV0dGVyLXNwYWNpbmc6IC0xcHg7IH1cblxuLmgzIHtcbiAgZm9udC1zaXplOiAyMDAlOyB9XG5cbi5oNCB7XG4gIGZvbnQtc2l6ZTogMTgwJTsgfVxuXG4uaDUge1xuICBmb250LXNpemU6IDEzMCU7IH1cblxudWwsIG9sIHtcbiAgbWFyZ2luOiAxLjVlbSAwIDAgMjBweDsgfVxuICB1bCBsaSwgb2wgbGkge1xuICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDEuNWVtO1xuICAgIGNvbG9yOiAjMzYzNDMxOyB9XG4gIHVsIHVsLCB1bCBvbCwgb2wgdWwsIG9sIG9sIHtcbiAgICBtYXJnaW4tdG9wOiAwOyB9XG5cbnVsIGxpIHtcbiAgbGlzdC1zdHlsZTogZGlzYzsgfVxuXG51bCB1bCBsaSB7XG4gIGxpc3Qtc3R5bGU6IGNpcmNsZTsgfVxuXG5vbCBsaSB7XG4gIGxpc3Qtc3R5bGU6IGRlY2ltYWw7IH1cblxuYmxvY2txdW90ZSB7XG4gIG1hcmdpbjogMi4yNWVtIDA7XG4gIGZvbnQtc2l6ZTogMS4zNTNyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjVlbTtcbiAgY29sb3I6ICNhMDlhOTI7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgcGFkZGluZy1sZWZ0OiAyZW07IH1cbiAgYmxvY2txdW90ZSBjaXRlIHtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgZGlzcGxheTogYmxvY2s7IH1cbiAgICBibG9ja3F1b3RlIGNpdGU6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6ICctLSAnOyB9XG5cbmVtLCBpLCAuaXRhbGljIHtcbiAgZm9udC1zdHlsZTogaXRhbGljOyB9XG5cbnN0cm9uZywgYiwgLmJvbGQge1xuICBmb250LXdlaWdodDogNzAwOyB9XG5cbi8qIERyb3AgY2FwIGFuZCBmaXJzdCBsaW5lICovXG4uZHJvcC1jYXAgcDpmaXJzdC1jaGlsZDpmaXJzdC1sZXR0ZXIge1xuICBjb2xvcjogI2I3YjFhOTtcbiAgZmxvYXQ6IGxlZnQ7XG4gIGZvbnQtZmFtaWx5OiBHZW9yZ2lhLCBzZXJpZjtcbiAgZm9udC1zaXplOiA3NXB4O1xuICBsaW5lLWhlaWdodDogNjBweDtcbiAgcGFkZGluZy10b3A6IDRweDtcbiAgcGFkZGluZy1yaWdodDogOHB4O1xuICBwYWRkaW5nLWxlZnQ6IDNweDsgfVxuXG4uZHJvcC1jYXAgcDpmaXJzdC1vZi10eXBlOmZpcnN0LWxpbmUge1xuICBjb2xvcjogIzc4NzA2NTtcbiAgZm9udC1mYW1pbHk6IEdlb3JnaWEsIHNlcmlmO1xuICBmb250LXNpemU6IDFlbTtcbiAgZm9udC1zdHlsZTogbm9ybWFsICFpbXBvcnRhbnQ7XG4gIC8qIENoZWF0IHRvIHByZXNlcnZlIHZpc3VhbCBzYW5pdHkgKi9cbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGxldHRlci1zcGFjaW5nOiAycHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cblxuLmRyb3AtY2FwIHA6Zmlyc3Qtb2YtdHlwZTo6YWZ0ZXIge1xuICBjbGVhcjogYm90aDtcbiAgY29udGVudDogXCJcIjtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLmRyb3AtY2FwIHA6Zmlyc3Qtb2YtdHlwZSArIHAge1xuICBjbGVhcjogbGVmdDsgfVxuXG5hIHtcbiAgY29sb3I6ICM0ZWFmZjY7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICBhOmhvdmVyIHtcbiAgICBjb2xvcjogIzBiN2ZkMzsgfVxuXG5maWd1cmUge1xuICBtYXJnaW46IDIuMjVlbSAwOyB9XG4gIGZpZ3VyZSBpbWcge1xuICAgIG1hcmdpbjogMDsgfVxuXG5maWdjYXB0aW9uIHtcbiAgbWFyZ2luLXRvcDogMTBweDtcbiAgY29sb3I6ICM1MTRlNDk7XG4gIGZvbnQtc2l6ZTogMS4yZW07IH1cblxuaW1nIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgbWFyZ2luOiAyLjI1ZW0gMDsgfVxuXG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW46IDIuMjVlbSAwO1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB9XG5cbnRhYmxlLCB0ZCwgdGgge1xuICBib3JkZXI6IDFweCBzb2xpZCAjZjJmMWVkO1xuICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG5cbnRoIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDsgfVxuXG50aCwgdGQge1xuICBwYWRkaW5nOiAxNXB4OyB9XG5cbi5jb21tZW50LWNvbnRlbnQge1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2VhZWFlYTtcbiAgcGFkZGluZy10b3A6IDM2cHg7IH1cbiAgLmNvbW1lbnQtY29udGVudCBmaWd1cmUge1xuICAgIG1hcmdpbi10b3A6IDA7IH1cbiAgLmNvbW1lbnQtY29udGVudCAuZ3JhdmF0YXIge1xuICAgIGZsb2F0OiBsZWZ0OyB9XG4gICAgLmNvbW1lbnQtY29udGVudCAuZ3JhdmF0YXIgaW1nLmF2YXRhciB7XG4gICAgICBtYXgtd2lkdGg6IDcycHg7XG4gICAgICBtYXgtaGVpZ2h0OiA3MnB4O1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgIC13ZWJraXQtYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDtcbiAgICAgIC1tb3otYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgLW1vei1iYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmc7XG4gICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94O1xuICAgICAgbWFyZ2luOiAwIGF1dG87IH1cblxuLmNvbW1lbnQtbWV0YS1pdGVtIHNwYW4ge1xuICBmb250LXNpemU6IDE0cHg7IH1cbiAgLmNvbW1lbnQtbWV0YS1pdGVtIHNwYW4gYSB7XG4gICAgZm9udC1zaXplOiAxNHB4OyB9XG5cbmRpdi5jb21tZW50LW1ldGEucG9zdC1tZXRhIHtcbiAgbWFyZ2luLWxlZnQ6IDkwcHg7XG4gIHBhZGRpbmc6IDAgMThweCAxOHB4IDE4cHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICBkaXYuY29tbWVudC1tZXRhLnBvc3QtbWV0YSAuY29tbWVudC1yZXBseS1saW5rIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIHJpZ2h0OiAwOyB9XG5cbnNlY3Rpb24uY2hpbGQtY29tbWVudHMuY29tbWVudHMtbGlzdCB7XG4gIHBhZGRpbmctbGVmdDogOTBweDsgfVxuXG4uY29tbWVudC1mb3JtIC5jb21tZW50LWZpZ3VyZSB7XG4gIGZsb2F0OiBsZWZ0O1xuICB3aWR0aDogOTBweDsgfVxuXG4vKlxyXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiNGb3Jtc1xyXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiovXG5sYWJlbCB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbGluZS1oZWlnaHQ6IDEuNzU7XG4gIG1hcmdpbjogMThweCAwIDA7XG4gIG1hcmdpbjogMHB4IDBweCA1cHggMHB4OyB9XG5cbmZvcm0gcCB7XG4gIG1hcmdpbjogMThweCAwcHggMHB4IDBweDtcbiAgZm9udC13ZWlnaHQ6IDYwMDsgfVxuXG5mb3JtIGltZy5hamF4LWxvYWRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogNTAlO1xuICBtYXJnaW4tbGVmdDogLTMwcHggIWltcG9ydGFudDtcbiAgYm90dG9tOiAtMjVweDsgfVxuXG5pbnB1dCxcbnRleHRhcmVhLFxuc2VsZWN0LFxuLnNlbGRpdixcbi5zZWxlY3QyLWNob2ljZSxcbi5zZWxlY3QyLXNlbGVjdGlvbi0tc2luZ2xlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbGluZS1oZWlnaHQ6IGluaXRpYWw7XG4gIG1hcmdpbjogOXB4IDBweCAwcHggMHB4O1xuICBwYWRkaW5nOiAxMHB4IDE1cHggMTBweCAxNXB4O1xuICBib3JkZXItd2lkdGg6IDFweDtcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZWFlYWVhOyB9XG5cbmlucHV0OmZvY3VzLFxudGV4dGFyZWE6Zm9jdXMsXG5zZWxlY3Q6Zm9jdXMge1xuICBvdXRsaW5lOiAwO1xuICBib3JkZXItc3R5bGU6IHNvbGlkOyB9XG5cbmlucHV0W3R5cGU9XCJzdWJtaXRcIl0sXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0sXG5pbnB1dFt0eXBlPVwiYnV0dG9uXCJdLFxuYnV0dG9uW3R5cGU9XCJzdWJtaXRcIl0ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDIwMG1zIGVhc2UtaW4tb3V0O1xuICAtbW96LXRyYW5zaXRpb246IGFsbCAyMDBtcyBlYXNlLWluLW91dDtcbiAgLW8tdHJhbnNpdGlvbjogYWxsIDIwMG1zIGVhc2UtaW4tb3V0O1xuICB0cmFuc2l0aW9uOiBhbGwgMjAwbXMgZWFzZS1pbi1vdXQ7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgcGFkZGluZzogMTNweCAzMXB4IDEzcHggMzFweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyICFpbXBvcnRhbnQ7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgb3V0bGluZTogbm9uZTtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgLXdlYmtpdC10ZXh0LXN0cm9rZTogMHB4O1xuICB3aWR0aDogYXV0bztcbiAgLXdlYmtpdC1ib3gtc2hhZG93OiBub25lO1xuICAtbW96LWJveC1zaGFkb3c6IG5vbmU7XG4gIGJveC1zaGFkb3c6IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7IH1cblxuaW5wdXRbdHlwZT1jaGVja2JveF0sXG5pbnB1dFt0eXBlPXJhZGlvXSB7XG4gIC13ZWJraXQtYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC1tb3otYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZvbnQtc2l6ZTogMWVtO1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZy1sZWZ0OiA4cHg7XG4gIHBhZGRpbmctcmlnaHQ6IDhweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7IH1cblxuaW5wdXRbdHlwZT1jaGVja2JveF06Y2hlY2tlZDpiZWZvcmUsXG5pbnB1dFt0eXBlPXJhZGlvXTpjaGVja2VkOmJlZm9yZSB7XG4gIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLW1vei1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBmb250LWZhbWlseTogXCJ1bmNvZGVpY29uXCI7XG4gIG1hcmdpbjogYXV0bztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgcmlnaHQ6IDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjJlbTsgfVxuXG5pbnB1dFt0eXBlPXJhZGlvXSB7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTsgfVxuXG5pbnB1dFt0eXBlPXJhZGlvXTpjaGVja2VkOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gIHdpZHRoOiA1MCU7XG4gIGhlaWdodDogNTAlOyB9XG5cbmlucHV0W3R5cGU9Y2hlY2tib3hdOmNoZWNrZWQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGYwMGNcIjsgfVxuXG5pbnB1dFt0eXBlPVwiZmlsZVwiXSxcbmlucHV0W3R5cGU9XCJyYW5nZVwiXSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbiAgLXdlYmtpdC1ib3gtc2hhZG93OiBub25lO1xuICAtbW96LWJveC1zaGFkb3c6IG5vbmU7XG4gIGJveC1zaGFkb3c6IG5vbmU7XG4gIHdpZHRoOiBhdXRvOyB9XG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC1tb3otYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbnRleHRhcmVhIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHJlc2l6ZTogbm9uZTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2VhZWFlYTsgfVxuXG5zZWxlY3Qge1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBtaW4td2lkdGg6IDEwMCU7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgYXBwZWFyYW5jZTogbm9uZTtcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgLW1vei1hcHBlYXJhbmNlOiBub25lO1xuICB0ZXh0LW92ZXJmbG93OiBcIlwiO1xuICBvdXRsaW5lOiBub25lO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAxMDAlIGNlbnRlcjtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgLXdlYmtpdC1ib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG4gIC1tb3otYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICBib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7IH1cblxuc2VsZWN0OmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZTsgfVxuXG5zZWxlY3Q6Oi1tcy1leHBhbmQge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbmJ1dHRvbltkaXNhYmxlZF0sXG5odG1sIGlucHV0W2Rpc2FibGVkXSB7XG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7IH1cblxuKiwgaHRtbCwgYm9keSB7XG4gIGZvbnQtc2l6ZTogMTdweDtcbiAgZm9udC1mYW1pbHk6IEdlb3JnaWEsIHNlcmlmO1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgfVxuXG5ib2R5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VkZWZmMTtcbiAgY29sb3I6ICMzNjM0MzE7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7IH1cblxuLndyYXBwZXIge1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiAxMjAwcHg7XG4gIG1hcmdpbjogMCBhdXRvOyB9XG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuOS4wIEFjY2Vzc2liaWxpdHlcclxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyogVGV4dCBtZWFudCBvbmx5IGZvciBzY3JlZW4gcmVhZGVycyAqL1xuLnNjcmVlbi1yZWFkZXItdGV4dCB7XG4gIGNsaXA6IHJlY3QoMXB4LCAxcHgsIDFweCwgMXB4KTtcbiAgaGVpZ2h0OiAxcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZSAhaW1wb3J0YW50O1xuICB3aWR0aDogMXB4OyB9XG5cbi5zY3JlZW4tcmVhZGVyLXRleHQ6Zm9jdXMge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjFmMWYxO1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIGJveC1zaGFkb3c6IDAgMCAycHggMnB4IHJnYmEoMCwgMCwgMCwgMC42KTtcbiAgY2xpcDogYXV0byAhaW1wb3J0YW50O1xuICBjb2xvcjogIzIxNzU5YjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgZm9udC1zaXplOiAxLjRyZW07XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBoZWlnaHQ6IGF1dG87XG4gIGxlZnQ6IDVweDtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcbiAgcGFkZGluZzogMTVweCAyM3B4IDE0cHg7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgdG9wOiA1cHg7XG4gIHdpZHRoOiBhdXRvO1xuICB6LWluZGV4OiAxMDAwMDA7XG4gIC8qIEFib3ZlIFdQIHRvb2xiYXIgKi8gfVxuXG4vKiA9V29yZFByZXNzIENvcmVcclxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi5hbGlnbm5vbmUge1xuICBtYXJnaW46IDVweCAyMHB4IDIwcHggMDsgfVxuXG4uYWxpZ25jZW50ZXIsXG5kaXYuYWxpZ25jZW50ZXIge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiA1cHggYXV0byA1cHggYXV0bzsgfVxuXG4uYWxpZ25yaWdodCB7XG4gIGZsb2F0OiByaWdodDtcbiAgbWFyZ2luOiA1cHggMCAyMHB4IDIwcHg7IH1cblxuLmFsaWdubGVmdCB7XG4gIGZsb2F0OiBsZWZ0O1xuICBtYXJnaW46IDVweCAyMHB4IDIwcHggMDsgfVxuXG5hIGltZy5hbGlnbnJpZ2h0IHtcbiAgZmxvYXQ6IHJpZ2h0O1xuICBtYXJnaW46IDVweCAwIDIwcHggMjBweDsgfVxuXG5hIGltZy5hbGlnbm5vbmUge1xuICBtYXJnaW46IDVweCAyMHB4IDIwcHggMDsgfVxuXG5hIGltZy5hbGlnbmxlZnQge1xuICBmbG9hdDogbGVmdDtcbiAgbWFyZ2luOiA1cHggMjBweCAyMHB4IDA7IH1cblxuYSBpbWcuYWxpZ25jZW50ZXIge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bzsgfVxuXG4ud3AtY2FwdGlvbiB7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNmMGYwZjA7XG4gIG1heC13aWR0aDogOTYlO1xuICAvKiBJbWFnZSBkb2VzIG5vdCBvdmVyZmxvdyB0aGUgY29udGVudCBhcmVhICovXG4gIHBhZGRpbmc6IDVweCAzcHggMTBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG5cbi53cC1jYXB0aW9uLmFsaWdubm9uZSB7XG4gIG1hcmdpbjogNXB4IDIwcHggMjBweCAwOyB9XG5cbi53cC1jYXB0aW9uLmFsaWdubGVmdCB7XG4gIG1hcmdpbjogNXB4IDIwcHggMjBweCAwOyB9XG5cbi53cC1jYXB0aW9uLmFsaWducmlnaHQge1xuICBtYXJnaW46IDVweCAwIDIwcHggMjBweDsgfVxuXG4ud3AtY2FwdGlvbiBpbWcge1xuICBib3JkZXI6IDAgbm9uZTtcbiAgaGVpZ2h0OiBhdXRvO1xuICBtYXJnaW46IDA7XG4gIG1heC13aWR0aDogOTguNSU7XG4gIHBhZGRpbmc6IDA7XG4gIHdpZHRoOiBhdXRvOyB9XG5cbi53cC1jYXB0aW9uIHAud3AtY2FwdGlvbi10ZXh0IHtcbiAgZm9udC1zaXplOiAxMXB4O1xuICBsaW5lLWhlaWdodDogMTdweDtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwIDRweCA1cHg7IH1cblxuLyogVGV4dCBtZWFudCBvbmx5IGZvciBzY3JlZW4gcmVhZGVycy4gKi9cbi5zY3JlZW4tcmVhZGVyLXRleHQge1xuICBjbGlwOiByZWN0KDFweCwgMXB4LCAxcHgsIDFweCk7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZSAhaW1wb3J0YW50O1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBoZWlnaHQ6IDFweDtcbiAgd2lkdGg6IDFweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG4uc2NyZWVuLXJlYWRlci10ZXh0OmZvY3VzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YxZjFmMTtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBib3gtc2hhZG93OiAwIDAgMnB4IDJweCByZ2JhKDAsIDAsIDAsIDAuNik7XG4gIGNsaXA6IGF1dG8gIWltcG9ydGFudDtcbiAgY29sb3I6ICMyMTc1OWI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZvbnQtc2l6ZTogMC44NzVyZW07XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBoZWlnaHQ6IGF1dG87XG4gIGxlZnQ6IDVweDtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcbiAgcGFkZGluZzogMTVweCAyM3B4IDE0cHg7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgdG9wOiA1cHg7XG4gIHdpZHRoOiBhdXRvO1xuICB6LWluZGV4OiAxMDAwMDA7XG4gIC8qIEFib3ZlIFdQIHRvb2xiYXIuICovIH1cblxuLyogTW9kdWxlcyAgICAgICAgICAgKi9cbi5zaXRlLWhlYWRlciAuc2l0ZS1icmFuZGluZyB7XG4gIG1heC13aWR0aDogMjUlO1xuICBwYWRkaW5nLWxlZnQ6IDEwcHg7XG4gIGZsb2F0OiBsZWZ0OyB9XG4gIC5zaXRlLWhlYWRlciAuc2l0ZS1icmFuZGluZyBhIHtcbiAgICBjb2xvcjogd2hpdGU7IH1cbiAgICAuc2l0ZS1oZWFkZXIgLnNpdGUtYnJhbmRpbmcgYTpob3ZlciB7XG4gICAgICBjb2xvcjogYmxhY2s7IH1cbiAgLnNpdGUtaGVhZGVyIC5zaXRlLWJyYW5kaW5nIC5zaXRlLXRpdGxlIHtcbiAgICBmb250LXNpemU6IDIuMmVtO1xuICAgIG1hcmdpbjogMDsgfVxuXG4uc2l0ZS1oZWFkZXIgLnRpdGxlLWJsb2NrIHtcbiAgbWFyZ2luOiAzcmVtIGF1dG87XG4gIG1heC13aWR0aDogNzQwcHg7XG4gIHBhZGRpbmc6IDA7XG4gIHdpZHRoOiBhdXRvO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgLnNpdGUtaGVhZGVyIC50aXRsZS1ibG9jayAuc2l0ZS10aXRsZSB7XG4gICAgbWFyZ2luOiAwO1xuICAgIGNvbG9yOiAjNzg3MDY1OyB9XG4gIC5zaXRlLWhlYWRlciAudGl0bGUtYmxvY2sgLnNpdGUtZGVzY3JpcHRpb24ge1xuICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICAgIGNvbG9yOiAjYTA5YTkyO1xuICAgIG1hcmdpbjogMDsgfVxuXG4ubmF2LWJhciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxYWJjOWM7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG4gIC5uYXYtYmFyIGEge1xuICAgIGZvbnQtZmFtaWx5OiBWZXJkYW5hLCBHZW5ldmEsIHNhbnMtc2VyaWY7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG5cbm5hdiB7XG4gIGZsb2F0OiByaWdodDsgfVxuICBuYXYgdWwge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7IH1cbiAgICBuYXYgdWwgbGkge1xuICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgbWFyZ2luLXRvcDogMDsgfVxuICAgICAgbmF2IHVsIGxpIGEge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgcGFkZGluZzogMCAxMHB4O1xuICAgICAgICBsaW5lLWhlaWdodDogNjJweDtcbiAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgICAgICAgbmF2IHVsIGxpIGE6aG92ZXIge1xuICAgICAgICAgIGJhY2tncm91bmQ6ICNlY2YwZjE7XG4gICAgICAgICAgY29sb3I6IGJsYWNrOyB9XG4gICAgICBuYXYgdWwgbGkgdWwgbGkge1xuICAgICAgICBtaW4td2lkdGg6IDE5MHB4OyB9XG4gICAgICAgIG5hdiB1bCBsaSB1bCBsaSBhIHtcbiAgICAgICAgICBwYWRkaW5nOiAxNXB4O1xuICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICAgICAgICAgIHotaW5kZXg6IDE7IH1cblxuLm5hdi1kcm9wZG93biB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgZGlzcGxheTogbm9uZTtcbiAgei1pbmRleDogMTtcbiAgYm94LXNoYWRvdzogMCAzcHggMTJweCByZ2JhKDAsIDAsIDAsIDAuMTUpOyB9XG5cbi5uYXYtbW9iaWxlIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBiYWNrZ3JvdW5kOiAjZWNmMGYxO1xuICBoZWlnaHQ6IDYycHg7XG4gIHdpZHRoOiA2MnB4OyB9XG5cbiNuYXYtdG9nZ2xlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAxOHB4O1xuICB0b3A6IDE3cHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgcGFkZGluZzogMTBweCAzNXB4IDE2cHggMHB4OyB9XG4gICNuYXYtdG9nZ2xlIHNwYW4sXG4gICNuYXYtdG9nZ2xlIHNwYW46YmVmb3JlLFxuICAjbmF2LXRvZ2dsZSBzcGFuOmFmdGVyIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgYm9yZGVyLXJhZGl1czogMXB4O1xuICAgIGhlaWdodDogNXB4O1xuICAgIHdpZHRoOiAzNXB4O1xuICAgIGJhY2tncm91bmQ6ICM3ODcwNjU7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIHRyYW5zaXRpb246IGFsbCAzMDBtcyBlYXNlLWluLW91dDsgfVxuICAjbmF2LXRvZ2dsZSBzcGFuOmJlZm9yZSB7XG4gICAgdG9wOiAtMTBweDsgfVxuICAjbmF2LXRvZ2dsZSBzcGFuOmFmdGVyIHtcbiAgICBib3R0b206IC0xMHB4OyB9XG4gICNuYXYtdG9nZ2xlLmFjdGl2ZSBzcGFuIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgfVxuICAgICNuYXYtdG9nZ2xlLmFjdGl2ZSBzcGFuOmJlZm9yZSwgI25hdi10b2dnbGUuYWN0aXZlIHNwYW46YWZ0ZXIge1xuICAgICAgdG9wOiAwOyB9XG4gICAgI25hdi10b2dnbGUuYWN0aXZlIHNwYW46YmVmb3JlIHtcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTsgfVxuICAgICNuYXYtdG9nZ2xlLmFjdGl2ZSBzcGFuOmFmdGVyIHtcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA4MDBweCkge1xuICAubmF2LW1vYmlsZSB7XG4gICAgZGlzcGxheTogYmxvY2s7IH1cbiAgbmF2IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwYWRkaW5nOiAzcHggMCAxMHB4OyB9XG4gICAgbmF2IHVsIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgICAgIG5hdiB1bCBsaSB7XG4gICAgICAgIGZsb2F0OiBub25lOyB9XG4gICAgICAgIG5hdiB1bCBsaSBhIHtcbiAgICAgICAgICBwYWRkaW5nOiAxNXB4O1xuICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyMHB4OyB9XG4gICAgICAgIG5hdiB1bCBsaSB1bCBsaSBhIHtcbiAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDMwcHg7IH1cbiAgLm5hdi1kcm9wZG93biB7XG4gICAgcG9zaXRpb246IHN0YXRpYzsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDgwMHB4KSB7XG4gIC5uYXYtbGlzdCB7XG4gICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDsgfSB9XG5cbi5uYXZiYXIge1xuICBoZWlnaHQ6IDYycHg7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgd2lkdGg6IDEwMCU7XG4gIHRvcDogMDtcbiAgei1pbmRleDogMTA7IH1cbiAgLm5hdmJhciBhIHtcbiAgICBmb250LWZhbWlseTogVmVyZGFuYSwgR2VuZXZhLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtc2l6ZTogMTRweDsgfVxuXG4uY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiA5NjBweDtcbiAgbWFyZ2luOiAwIGF1dG87IH1cblxuLmJyYW5kIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBwYWRkaW5nLWxlZnQ6IDIwcHg7XG4gIGZsb2F0OiBsZWZ0O1xuICBsaW5lLWhlaWdodDogNjJweDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1zaXplOiAxLjRlbTsgfVxuICAuYnJhbmQgYSxcbiAgLmJyYW5kIGE6dmlzaXRlZCB7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG4uY29udGVudC1hcmVhIHtcbiAgbWFyZ2luOiAzcmVtIGF1dG87XG4gIG1heC13aWR0aDogNzQwcHg7XG4gIHBhZGRpbmc6IDA7XG4gIHdpZHRoOiBhdXRvOyB9XG5cbi5wb3N0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIC13ZWJraXQtYm94LXNoYWRvdzogMnB4IDJweCA2cHggMHB4IHJnYmEoMCwgMCwgMCwgMC4wNSk7XG4gIC1tb3otYm94LXNoYWRvdzogMnB4IDJweCA2cHggMHB4IHJnYmEoMCwgMCwgMCwgMC4wNSk7XG4gIGJveC1zaGFkb3c6IDJweCAycHggNnB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMDUpOyB9XG4gIC5wb3N0IC5lbnRyeS1oZWFkZXIge1xuICAgIHBhZGRpbmc6IDNlbSAzZW0gMDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgICAucG9zdCAuZW50cnktaGVhZGVyIC5lbnRyeS1tZXRhIHtcbiAgICAgIGNvbG9yOiAjYTA5YTkyOyB9XG4gICAgLnBvc3QgLmVudHJ5LWhlYWRlciAuZW50cnktdGl0bGUge1xuICAgICAgZm9udC1mYW1pbHk6IEdlb3JnaWEsIHNlcmlmO1xuICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgIGNvbG9yOiAjNzg3MDY1OyB9XG4gICAgICAucG9zdCAuZW50cnktaGVhZGVyIC5lbnRyeS10aXRsZSBhIHtcbiAgICAgICAgZm9udC1zaXplOiAyLjVyZW07XG4gICAgICAgIGNvbG9yOiAjNzg3MDY1O1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgICAgICAgLnBvc3QgLmVudHJ5LWhlYWRlciAuZW50cnktdGl0bGUgYTpob3ZlciB7XG4gICAgICAgICAgY29sb3I6ICM0ZWFmZjY7IH1cbiAgLnBvc3QgLmVudHJ5LWNvbnRlbnQge1xuICAgIHBhZGRpbmc6IDAgM2VtIDFlbTsgfVxuICAgIC5wb3N0IC5lbnRyeS1jb250ZW50IHAge1xuICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDEuNjE4OyB9XG4gIC5wb3N0IC5lbnRyeS1mb290ZXIge1xuICAgIGNvbG9yOiAjYTA5YTkyO1xuICAgIHBhZGRpbmc6IDAgM2VtIDNlbTsgfVxuXG4vKiBcIlJlYWQgbW9yZVwiIGxpbmsgKi9cbi5tb3JlLWxpbmsge1xuICBjb2xvcjogI2EwOWE5MjtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdGV4dC10cmFuc2Zvcm06IGxvd2VyY2FzZTtcbiAgd2lkdGg6IDEwMCU7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICAubW9yZS1saW5rOnZpc2l0ZWQge1xuICAgIGNvbG9yOiAjYTA5YTkyO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHRleHQtdHJhbnNmb3JtOiBsb3dlcmNhc2U7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gIC5tb3JlLWxpbms6aG92ZXIge1xuICAgIGNvbG9yOiAjNGVhZmY2OyB9XG4gIC5tb3JlLWxpbms6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIntcIjtcbiAgICBkaXNwbGF5OiBpbmxpbmU7XG4gICAgZm9udC1zaXplOiAxLjVlbTtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgcGFkZGluZzogMCAxMHB4O1xuICAgIHZlcnRpY2FsLWFsaWduOiAtMC4xNWVtOyB9XG4gIC5tb3JlLWxpbms6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwifVwiO1xuICAgIGRpc3BsYXk6IGlubGluZTtcbiAgICBmb250LXNpemU6IDEuNWVtO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBwYWRkaW5nOiAwIDEwcHg7XG4gICAgdmVydGljYWwtYWxpZ246IC0wLjE1ZW07IH1cblxuLyogSW4tcGFnZSBvciBpbi1wb3N0IG5hdmlnYXRpb24gKi9cbi5wYWdpbmF0aW9uIHtcbiAgbWFyZ2luLXRvcDogMnJlbTtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cbiAgLnBhZ2luYXRpb24gLnByZXZpb3VzIHtcbiAgICBmbG9hdDogbGVmdDtcbiAgICB3aWR0aDogNTAlO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7IH1cbiAgLnBhZ2luYXRpb24gLm5leHQge1xuICAgIGZsb2F0OiByaWdodDtcbiAgICB3aWR0aDogNTAlO1xuICAgIHRleHQtYWxpZ246IHJpZ2h0OyB9XG4gIC5wYWdpbmF0aW9uIGEge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBjb2xvcjogI2EwOWE5MjtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG4gICAgLnBhZ2luYXRpb24gYTpob3ZlciB7XG4gICAgICBjb2xvcjogIzRlYWZmNjsgfVxuICAgIC5wYWdpbmF0aW9uIGEgLm1ldGEtbmF2IHtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDsgfVxuXG4ucHJldmlvdXMgLm1ldGEtbmF2IGE6YmVmb3JlLFxuLm5leHQgLm1ldGEtbmF2IGE6YWZ0ZXIsXG4ucHJldmlvdXMgYSAubWV0YS1uYXY6YmVmb3JlLFxuLm5leHQgYSAubWV0YS1uYXY6YWZ0ZXIge1xuICBib3JkZXI6IHNvbGlkIHRyYW5zcGFyZW50IDRweDtcbiAgY29udGVudDogXCJcIjtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBoZWlnaHQ6IDA7XG4gIG1hcmdpbjogMCAwLjVyZW07XG4gIHRvcDogMC44ZW07XG4gIHdpZHRoOiAwOyB9XG5cbi5wcmV2aW91cyAubWV0YS1uYXYgYTpiZWZvcmUsXG4ucHJldmlvdXMgYSAubWV0YS1uYXY6YmVmb3JlIHtcbiAgYm9yZGVyLWxlZnQ6IDA7XG4gIGJvcmRlci1yaWdodC1jb2xvcjogI2EwOWE5MjsgfVxuXG4ubmV4dCAubWV0YS1uYXYgYTphZnRlcixcbi5uZXh0IGEgLm1ldGEtbmF2OmFmdGVyIHtcbiAgYm9yZGVyLWxlZnQtY29sb3I6ICNhMDlhOTI7XG4gIGJvcmRlci1yaWdodDogMDsgfVxuXG4vKiBFbnRyeSBjb250ZW50ICovXG5hcnRpY2xlICsgYXJ0aWNsZSB7XG4gIG1hcmdpbi10b3A6IDZyZW07IH1cblxuLnBhZ2Uge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmOWY1O1xuICAtd2Via2l0LWJveC1zaGFkb3c6IDJweCAycHggNnB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMDUpO1xuICAtbW96LWJveC1zaGFkb3c6IDJweCAycHggNnB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMDUpO1xuICBib3gtc2hhZG93OiAycHggMnB4IDZweCAwcHggcmdiYSgwLCAwLCAwLCAwLjA1KTtcbiAgcGFkZGluZzogM2VtIDNlbSAzZW07IH1cbiAgLnBhZ2UgLmVudHJ5LWhlYWRlciB7XG4gICAgcGFkZGluZzogM2VtIDNlbSAwO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAgIC5wYWdlIC5lbnRyeS1oZWFkZXIgLmVudHJ5LW1ldGEge1xuICAgICAgY29sb3I6ICNhMDlhOTI7IH1cbiAgICAucGFnZSAuZW50cnktaGVhZGVyIC5lbnRyeS10aXRsZSB7XG4gICAgICBmb250LWZhbWlseTogR2VvcmdpYSwgc2VyaWY7XG4gICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgY29sb3I6ICM3ODcwNjU7IH1cbiAgICAgIC5wYWdlIC5lbnRyeS1oZWFkZXIgLmVudHJ5LXRpdGxlIGEge1xuICAgICAgICBmb250LXNpemU6IDIuNXJlbTtcbiAgICAgICAgY29sb3I6ICM3ODcwNjU7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICAgICAgICAucGFnZSAuZW50cnktaGVhZGVyIC5lbnRyeS10aXRsZSBhOmhvdmVyIHtcbiAgICAgICAgICBjb2xvcjogIzRlYWZmNjsgfVxuICAucGFnZSAuZW50cnktY29udGVudCB7XG4gICAgcGFkZGluZzogMCAzZW0gMWVtOyB9XG4gICAgLnBhZ2UgLmVudHJ5LWNvbnRlbnQgcCB7XG4gICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICBsaW5lLWhlaWdodDogMS42MTg7IH1cbiAgLnBhZ2UgLmVudHJ5LWZvb3RlciB7XG4gICAgY29sb3I6ICNhMDlhOTI7XG4gICAgcGFkZGluZzogMCAzZW0gM2VtOyB9XG5cbi5zaGFkb3ctYm94IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIG1hcmdpbi10b3A6IDJyZW07XG4gIHBhZGRpbmc6IDFlbSAzZW0gM2VtO1xuICAtd2Via2l0LWJveC1zaGFkb3c6IDJweCAycHggNnB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMDUpO1xuICAtbW96LWJveC1zaGFkb3c6IDJweCAycHggNnB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMDUpO1xuICBib3gtc2hhZG93OiAycHggMnB4IDZweCAwcHggcmdiYSgwLCAwLCAwLCAwLjA1KTsgfVxuXG4uc2l0ZS1pbmZvIHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBjb2xvcjogIzc4NzA2NTtcbiAgbWFyZ2luOiAxcmVtIGF1dG87XG4gIG1heC13aWR0aDogNjgwcHg7XG4gIHBhZGRpbmc6IDA7XG4gIHdpZHRoOiBhdXRvO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cblxuLnNpdGUtZm9vdGVyIHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlYWU5ZTY7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG4iLCIvLyBIZWFkZXJzXHJcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYge1xyXG4gICAgZm9udC1mYW1pbHk6ICRzYW5zLXNlcmlmO1xyXG4gICAgLy9tYXJnaW46ICRoZWFkZXItbWFyZ2luICogMS41IDAgJGhlYWRlci1tYXJnaW4gMDtcclxuICAgIGNvbG9yOiAkaGVhZGVyLWNvbG9yO1xyXG4gICAgbGluZS1oZWlnaHQ6ICRoZWFkZXItbGluZS1oZWlnaHQ7XHJcbiAgICBmb250LXdlaWdodDogJG5vcm1hbDtcclxufVxyXG5cclxuaDEsIC5oMSB7XHJcbiAgICBmb250LXNpemU6ICRoZWFkZXItc2l6ZTtcclxufVxyXG5cclxuaDIsIC5oMiB7XHJcbiAgICBmb250LXNpemU6ICRoZWFkZXItc2l6ZSAvIDEuMztcclxufVxyXG5cclxuaDMsIC5oMyB7XHJcbiAgICBmb250LXNpemU6ICRoZWFkZXItc2l6ZSAvIDEuNTtcclxufVxyXG5cclxuaDQsIC5oNCB7XHJcbiAgICBmb250LXNpemU6ICRoZWFkZXItc2l6ZSAvIDEuNztcclxufVxyXG5cclxuaDUsIC5oNSB7XHJcbiAgICBmb250LXNpemU6ICRoZWFkZXItc2l6ZSAvIDEuODtcclxufVxyXG5cclxuaDYsIC5oNiB7XHJcbiAgICBmb250LXNpemU6ICRoZWFkZXItc2l6ZSAvIDI7XHJcbn1cclxuXHJcbi5oMSwgLmgyLCAuaDMsIC5oNCwgLmg1LCAuaDYgeyBmb250LWZhbWlseTogJHNlcmlmOyBmb250LXdlaWdodDogJGJvbGQ7IH1cclxuLmgxLCAuaDIgeyBsaW5lLWhlaWdodDogMS4xOyB9XHJcbi5oMywgLmg0IHsgbGluZS1oZWlnaHQ6IDEuMzsgfVxyXG4uaDEgeyBmb250LXNpemU6IDQwMCU7IGxldHRlci1zcGFjaW5nOiAtMnB4OyB9XHJcbi5oMiB7IGZvbnQtc2l6ZTogMjUwJTsgbGV0dGVyLXNwYWNpbmc6IC0xcHg7IH1cclxuLmgzIHsgZm9udC1zaXplOiAyMDAlOyB9XHJcbi5oNCB7IGZvbnQtc2l6ZTogMTgwJTsgfVxyXG4uaDUgeyBmb250LXNpemU6IDEzMCU7IH1cclxuXHJcbi8vIExpc3RzXHJcbnVsLCBvbCB7XHJcbiAgICBtYXJnaW46ICRwYXJhZ3JhcGgtbWFyZ2luIDAgMCAyMHB4O1xyXG5cclxuICAgIGxpIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAkcGFyYWdyYXBoLWxpbmUtaGVpZ2h0O1xyXG4gICAgICAgIGNvbG9yOiAkcGFyYWdyYXBoLWNvbG9yO1xyXG4gICAgfVxyXG5cclxuICAgIHVsLCBvbCB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMDtcclxuICAgIH1cclxufVxyXG5cclxudWwge1xyXG5cclxuICAgIGxpIHtcclxuICAgICAgICBsaXN0LXN0eWxlOiBkaXNjO1xyXG4gICAgfVxyXG5cclxuICAgIHVsIHtcclxuXHJcbiAgICAgICAgbGkge1xyXG4gICAgICAgICAgICBsaXN0LXN0eWxlOiBjaXJjbGU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5vbCB7XHJcblxyXG4gICAgbGkge1xyXG4gICAgICAgIGxpc3Qtc3R5bGU6IGRlY2ltYWw7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vIEJsb2NrcXVvdGVcclxuYmxvY2txdW90ZSB7XHJcbiAgICBtYXJnaW46ICRibG9ja3F1b3RlLW1hcmdpbiAwO1xyXG4gICAgZm9udC1zaXplOiAkYmxvY2txdW90ZS1zaXplO1xyXG4gICAgbGluZS1oZWlnaHQ6ICRibG9ja3F1b3RlLWxpbmUtaGVpZ2h0O1xyXG4gICAgY29sb3I6ICRibG9ja3F1b3RlLWNvbG9yO1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuICAgIHBhZGRpbmctbGVmdDogMmVtO1xyXG4gICAgXHJcbiAgICBjaXRlIHtcclxuICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjpiZWZvcmUge1xyXG4gICAgICAgICAgICBjb250ZW50OiAnLS0gJztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vIE1pc2MgU3R5bGVzXHJcbmVtLCBpLCAuaXRhbGljIHtcclxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxufVxyXG5cclxuc3Ryb25nLCBiLCAuYm9sZCB7XHJcbiAgICBmb250LXdlaWdodDogJGJvbGQ7XHJcbn1cclxuXHJcblxyXG5cclxuLyogRHJvcCBjYXAgYW5kIGZpcnN0IGxpbmUgKi9cclxuLmRyb3AtY2FwIHA6Zmlyc3QtY2hpbGQ6Zmlyc3QtbGV0dGVyIHtcclxuICAgIGNvbG9yOiAjYjdiMWE5O1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICBmb250LWZhbWlseTogJHNlcmlmO1xyXG4gICAgZm9udC1zaXplOiA3NXB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDYwcHg7XHJcbiAgICBwYWRkaW5nLXRvcDogNHB4O1xyXG4gICAgcGFkZGluZy1yaWdodDogOHB4O1xyXG4gICAgcGFkZGluZy1sZWZ0OiAzcHg7XHJcbn1cclxuXHJcbi5kcm9wLWNhcCBwOmZpcnN0LW9mLXR5cGU6Zmlyc3QtbGluZSB7XHJcbiAgICBjb2xvcjogIzc4NzA2NTtcclxuICAgIGZvbnQtZmFtaWx5OiAkc2VyaWY7XHJcbiAgICBmb250LXNpemU6IDFlbTtcclxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbCAhaW1wb3J0YW50OyAvKiBDaGVhdCB0byBwcmVzZXJ2ZSB2aXN1YWwgc2FuaXR5ICovXHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIGxldHRlci1zcGFjaW5nOiAycHg7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG59XHJcblxyXG4uZHJvcC1jYXAgcDpmaXJzdC1vZi10eXBlOjphZnRlciB7XHJcbiAgICBjbGVhcjogYm90aDtcclxuICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLmRyb3AtY2FwIHA6Zmlyc3Qtb2YtdHlwZSArIHAge1xyXG4gICAgY2xlYXI6IGxlZnQ7XHJcbn0iLCIvLyBDb2xvdXIgUGFsZXR0ZVxyXG4kY2xvdWRzICAgICAgICAgICAgICAgICA6ICNlY2YwZjE7XHJcbiRvZmYtd2hpdGUgICAgICAgICAgICAgIDogI2ZhZjlmNTtcclxuJG9mZi13aGl0ZS1kYXJrICAgICAgICAgOiAjZjJmMWVkO1xyXG4kY3JlYW0gICAgICAgICAgICAgICAgICA6ICNlYWU5ZTY7XHJcbiRsaWdodC1ncmV5ICAgICAgICAgICAgIDogI2Q5ZDZkMDtcclxuJG1lZGl1bS1ncmV5ICAgICAgICAgICAgOiAjYTA5YTkyO1xyXG4kZGFya2VyLWdyZXkgICAgICAgICAgICA6ICM3ODcwNjU7XHJcbiRjaGFyY29hbCAgICAgICAgICAgICAgIDogIzM2MzQzMTtcclxuJGJsYWNrLWlzaCAgICAgICAgICAgICAgOiAjMjYyMzFlO1xyXG4kZmxhdC1ncmVlbiAgICAgICAgICAgICA6ICMxYWJjOWM7XHJcblxyXG4vLyBGb250IEZhbWlseVxyXG4kc2VyaWYgICAgICAgICAgICAgICAgICA6IEdlb3JnaWEsIHNlcmlmO1xyXG4kc2Fucy1zZXJpZiAgICAgICAgICAgICA6IFZlcmRhbmEsIEdlbmV2YSwgc2Fucy1zZXJpZjtcclxuJG1vbm8gICAgICAgICAgICAgICAgICAgOiAnU291cmNlIENvZGUgUHJvJywgQ291cmllciwgbW9ubztcclxuXHJcbi8vIEZvbnQgV2VpZ2h0c1xyXG4kbGlnaHQgICAgICAgICAgICAgICAgICA6IDMwMDtcclxuJG5vcm1hbCAgICAgICAgICAgICAgICAgOiA0MDA7XHJcbiRzZW1pYm9sZCAgICAgICAgICAgICAgIDogNTAwO1xyXG4kYm9sZCAgICAgICAgICAgICAgICAgICA6IDcwMDtcclxuXHJcbi8vIEJhc2UgRm9udCBmb3IgSFRNTFxyXG4kYmFzZS1mb250LXNpemUgICAgICAgICA6IDE3cHg7XHJcblxyXG4vLyBMYXlvdXQgd2lkdGhzXHJcbiRvdXRlci1jb250ZW50LXdpZHRoICAgIDogOTYwcHg7XHJcbiRpbm5lci1jb250ZW50LXdpZHRoICAgIDogNzQwcHg7XHJcbiRuYXYtaGVpZ2h0ICAgICAgICAgICAgIDogNjJweDtcclxuXHJcbi8vIFBhcmFncmFwaCBTdHlsZXNcclxuJHBhcmFncmFwaC1jb2xvciAgICAgICAgOiAkY2hhcmNvYWw7XHJcbiRwYXJhZ3JhcGgtc2l6ZSAgICAgICAgIDogMS4wNjNyZW07IC8vIDE3cHhcclxuJHBhcmFncmFwaC1saW5lLWhlaWdodCAgOiAxLjVlbTtcclxuJHBhcmFncmFwaC1tYXJnaW4gICAgICAgOiAxLjVlbTtcclxuXHJcbi8vIEhlYWRlciBTdHlsZXNcclxuJGhlYWRlci1jb2xvciAgICAgICAgICAgOiAkZGFya2VyLWdyZXk7IC8vIGRhcmsgZ3JleVxyXG4kaGVhZGVyLXNpemUgICAgICAgICAgICA6IDIuNXJlbTsgLy8gNDBweFxyXG4kaGVhZGVyLWxpbmUtaGVpZ2h0ICAgICA6IDEuMjVlbTtcclxuJGhlYWRlci1tYXJnaW4gICAgICAgICAgOiAkcGFyYWdyYXBoLW1hcmdpbiAqIDEuMjtcclxuXHJcbi8vIEJsb2NrcXVvdGUgU3R5bGVzXHJcbiRibG9ja3F1b3RlLWNvbG9yICAgICAgIDogJG1lZGl1bS1ncmV5O1xyXG4kYmxvY2txdW90ZS1zaXplICAgICAgICA6IDEuMzUzcmVtOyAvLyAyM3B4XHJcbiRibG9ja3F1b3RlLWxpbmUtaGVpZ2h0IDogMS41ZW07XHJcbiRibG9ja3F1b3RlLW1hcmdpbiAgICAgIDogJHBhcmFncmFwaC1tYXJnaW4gKiAxLjU7XHJcblxyXG4vLyBMaW5rc1xyXG4kbGluay1jb2xvciAgICAgICAgICAgICA6ICM0ZWFmZjY7ICAvLyBibHVlXHJcbiRsaW5rLWNvbG9yLWhvdmVyICAgICAgIDogZGFya2VuKCRsaW5rLWNvbG9yLCAyMCUpO1xyXG4kbGluay1jb2xvci1hY3RpdmUgICAgICA6IGRhcmtlbigkbGluay1jb2xvciwgMjAlKTtcclxuXHJcbi8vIFVzZWQgaW4gVGFibGVzXHJcbiRib3JkZXItY29sb3IgICAgICAgICAgIDogJG9mZi13aGl0ZS1kYXJrOyAvLyBsaWdodCBncmV5XHJcblxyXG4vLyBCcmVha3BvaW50c1xyXG4kdGFibGV0ICAgICAgICAgICAgICAgICA6IDgwMHB4O1xyXG4kcGhvbmUgICAgICAgICAgICAgICAgICA6IDY0MHB4OyIsImEge1xyXG4gICAgY29sb3I6ICRsaW5rLWNvbG9yO1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgICBjb2xvcjogZGFya2VuKCRsaW5rLWNvbG9yLCAyMCUpO1xyXG4gICAgfVxyXG59XHJcblxyXG4vLyBGaWd1cmVcclxuZmlndXJlIHtcclxuICAgIG1hcmdpbjogJGJsb2NrcXVvdGUtbWFyZ2luIDA7XHJcblxyXG4gICAgaW1nIHtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICB9XHJcbn1cclxuXHJcbmZpZ2NhcHRpb24ge1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxuICAgIGNvbG9yOiBsaWdodGVuKCRwYXJhZ3JhcGgtY29sb3IsIDEwJSk7XHJcbiAgICBmb250LXNpemU6ICRwYXJhZ3JhcGgtbWFyZ2luICogMC44O1xyXG59XHJcblxyXG5cclxuaW1nIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgbWFyZ2luOiAkYmxvY2txdW90ZS1tYXJnaW4gMDtcclxufVxyXG5cclxuLy8gVGFibGVzXHJcbnRhYmxlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWFyZ2luOiAkYmxvY2txdW90ZS1tYXJnaW4gMDtcclxuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbn1cclxuXHJcbnRhYmxlLCB0ZCwgdGgge1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgJGJvcmRlci1jb2xvcjtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbn1cclxuXHJcbnRoIHtcclxuICAgIGZvbnQtd2VpZ2h0OiAkYm9sZDtcclxufVxyXG5cclxudGgsIHRkIHtcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbn0iLCIuY29tbWVudC1jb250ZW50IHtcclxuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZWFlYWVhO1xyXG4gICAgcGFkZGluZy10b3A6IDM2cHg7XHJcbiAgICBcclxuICAgIGZpZ3VyZSB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLmdyYXZhdGFyIHtcclxuICAgICAgICBmbG9hdDogbGVmdDtcclxuICAgICAgICBcclxuICAgICAgICBpbWcuYXZhdGFyIHtcclxuICAgICAgICAgICAgbWF4LXdpZHRoOiA3MnB4O1xyXG4gICAgICAgICAgICBtYXgtaGVpZ2h0OiA3MnB4O1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgICAgICAgIC13ZWJraXQtYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDtcclxuICAgICAgICAgICAgLW1vei1ib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgICAgICAgIC1tb3otYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nO1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY2xpcDogcGFkZGluZy1ib3g7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLmNvbW1lbnQtbWV0YS1pdGVtIHtcclxuICAgIFxyXG4gICAgc3BhbiB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgIFxyXG4gICAgICAgIGEge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5kaXYuY29tbWVudC1tZXRhLnBvc3QtbWV0YSB7XHJcbiAgICBtYXJnaW4tbGVmdDogOTBweDtcclxuICAgIHBhZGRpbmc6IDAgMThweCAxOHB4IDE4cHg7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBcclxuICAgIC5jb21tZW50LXJlcGx5LWxpbmsge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICB9XHJcbn1cclxuXHJcbnNlY3Rpb24uY2hpbGQtY29tbWVudHMuY29tbWVudHMtbGlzdCB7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDkwcHg7XHJcbn1cclxuXHJcbi5jb21tZW50LWZvcm0gLmNvbW1lbnQtZmlndXJlIHtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgd2lkdGg6IDkwcHg7XHJcbn0iLCIvKlxyXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiNGb3Jtc1xyXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiovXHJcbmxhYmVsIHtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgbGluZS1oZWlnaHQ6IDEuNzU7XHJcbiAgbWFyZ2luOiAxOHB4IDAgMDtcclxuICBtYXJnaW46IDBweCAwcHggNXB4IDBweDtcclxufVxyXG5mb3JtIHAge1xyXG4gIG1hcmdpbjogMThweCAwcHggMHB4IDBweDtcclxuICBmb250LXdlaWdodDogNjAwO1xyXG59XHJcbmZvcm0gaW1nLmFqYXgtbG9hZGVyIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgbGVmdDogNTAlO1xyXG4gIG1hcmdpbi1sZWZ0OiAtMzBweCAhaW1wb3J0YW50O1xyXG4gIGJvdHRvbTogLTI1cHg7XHJcbn1cclxuaW5wdXQsXHJcbnRleHRhcmVhLFxyXG5zZWxlY3QsXHJcbi5zZWxkaXYsXHJcbi5zZWxlY3QyLWNob2ljZSxcclxuLnNlbGVjdDItc2VsZWN0aW9uLS1zaW5nbGUge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxuICBsaW5lLWhlaWdodDogaW5pdGlhbDtcclxuICBtYXJnaW46IDlweCAwcHggMHB4IDBweDtcclxuICBwYWRkaW5nOiAxMHB4IDE1cHggMTBweCAxNXB4O1xyXG4gIGJvcmRlci13aWR0aDogMXB4O1xyXG4gIGJvcmRlci1zdHlsZTogc29saWQ7XHJcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xyXG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2VhZWFlYTtcclxufVxyXG5pbnB1dDpmb2N1cyxcclxudGV4dGFyZWE6Zm9jdXMsXHJcbnNlbGVjdDpmb2N1cyB7XHJcbiAgb3V0bGluZTogMDtcclxuICBib3JkZXItc3R5bGU6IHNvbGlkO1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdLFxyXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0sXHJcbmlucHV0W3R5cGU9XCJidXR0b25cIl0sXHJcbmJ1dHRvblt0eXBlPVwic3VibWl0XCJdIHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMjAwbXMgZWFzZS1pbi1vdXQ7XHJcbiAgLW1vei10cmFuc2l0aW9uOiBhbGwgMjAwbXMgZWFzZS1pbi1vdXQ7XHJcbiAgLW8tdHJhbnNpdGlvbjogYWxsIDIwMG1zIGVhc2UtaW4tb3V0O1xyXG4gIHRyYW5zaXRpb246IGFsbCAyMDBtcyBlYXNlLWluLW91dDtcclxuICBmb250LXNpemU6IDEycHg7XHJcbiAgcGFkZGluZzogMTNweCAzMXB4IDEzcHggMzFweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDtcclxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XHJcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xyXG4gIG91dGxpbmU6IG5vbmU7XHJcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAtd2Via2l0LXRleHQtc3Ryb2tlOiAwcHg7XHJcbiAgd2lkdGg6IGF1dG87XHJcbiAgLXdlYmtpdC1ib3gtc2hhZG93OiBub25lO1xyXG4gIC1tb3otYm94LXNoYWRvdzogbm9uZTtcclxuICBib3gtc2hhZG93OiBub25lO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcclxufVxyXG5pbnB1dFt0eXBlPWNoZWNrYm94XSxcclxuaW5wdXRbdHlwZT1yYWRpb10ge1xyXG4gIC13ZWJraXQtYm94LXNpemluZzogY29udGVudC1ib3g7XHJcbiAgLW1vei1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcclxuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgZm9udC1zaXplOiAxZW07XHJcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xyXG4gIG1hcmdpbjogMDtcclxuICBwYWRkaW5nLWxlZnQ6IDhweDtcclxuICBwYWRkaW5nLXJpZ2h0OiA4cHg7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBsaW5lLWhlaWdodDogbm9ybWFsO1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPWNoZWNrYm94XTpjaGVja2VkOmJlZm9yZSxcclxuaW5wdXRbdHlwZT1yYWRpb106Y2hlY2tlZDpiZWZvcmUge1xyXG4gIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAtbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICBmb250LWZhbWlseTogXCJ1bmNvZGVpY29uXCI7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDA7XHJcbiAgbGVmdDogMDtcclxuICBib3R0b206IDA7XHJcbiAgcmlnaHQ6IDA7XHJcbiAgbGluZS1oZWlnaHQ6IDEuMmVtO1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPXJhZGlvXSB7XHJcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPXJhZGlvXTpjaGVja2VkOmJlZm9yZSB7XHJcbiAgY29udGVudDogXCJcIjtcclxuICBib3JkZXItcmFkaXVzOiAxMDAlO1xyXG4gIHdpZHRoOiA1MCU7XHJcbiAgaGVpZ2h0OiA1MCU7XHJcbn1cclxuaW5wdXRbdHlwZT1jaGVja2JveF06Y2hlY2tlZDpiZWZvcmUge1xyXG4gIGNvbnRlbnQ6IFwiXFxmMDBjXCI7XHJcbn1cclxuaW5wdXRbdHlwZT1cImZpbGVcIl0sXHJcbmlucHV0W3R5cGU9XCJyYW5nZVwiXSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcclxuICBwYWRkaW5nOiAwO1xyXG4gIGJvcmRlcjogMDtcclxuICAtd2Via2l0LWJveC1zaGFkb3c6IG5vbmU7XHJcbiAgLW1vei1ib3gtc2hhZG93OiBub25lO1xyXG4gIGJveC1zaGFkb3c6IG5vbmU7XHJcbiAgd2lkdGg6IGF1dG87XHJcbn1cclxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXSB7XHJcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gIC1tb3otYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcclxufVxyXG5cclxudGV4dGFyZWEge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHJlc2l6ZTogbm9uZTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNlYWVhZWE7XHJcbn1cclxuXHJcbnNlbGVjdCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gIG1pbi13aWR0aDogMTAwJTtcclxuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XHJcbiAgYXBwZWFyYW5jZTogbm9uZTtcclxuICBib3JkZXItc3R5bGU6IHNvbGlkO1xyXG4gIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgLW1vei1hcHBlYXJhbmNlOiBub25lO1xyXG4gIHRleHQtb3ZlcmZsb3c6IFwiXCI7XHJcbiAgb3V0bGluZTogbm9uZTtcclxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAxMDAlIGNlbnRlcjtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gIC13ZWJraXQtYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xyXG4gIC1tb3otYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xyXG4gIGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcclxufVxyXG5cclxuc2VsZWN0OmZvY3VzIHtcclxuICBvdXRsaW5lOiBub25lO1xyXG59XHJcbnNlbGVjdDo6LW1zLWV4cGFuZCB7XHJcbiAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuXHJcbmJ1dHRvbltkaXNhYmxlZF0sXHJcbmh0bWwgaW5wdXRbZGlzYWJsZWRdIHtcclxuICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xyXG59IiwiLy8gTWFrZSB0eXBlIG5vcm1hbCBhY3Jvc3MgYnJvd3NlcnNcclxuKiwgaHRtbCwgYm9keSB7XHJcbiAgICBmb250LXNpemU6ICRiYXNlLWZvbnQtc2l6ZTtcclxuICAgIGZvbnQtZmFtaWx5OiAkc2VyaWY7XHJcbiAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcclxuICAgIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XHJcbiAgICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XHJcbiAgICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcclxufVxyXG5cclxuYm9keSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWRlZmYxO1xyXG4gICAgY29sb3I6ICRjaGFyY29hbDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjU7XHJcbn1cclxuXHJcbi53cmFwcGVyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWF4LXdpZHRoOiAxMjAwcHg7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxufVxyXG5cclxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG45LjAgQWNjZXNzaWJpbGl0eVxyXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbi8qIFRleHQgbWVhbnQgb25seSBmb3Igc2NyZWVuIHJlYWRlcnMgKi9cclxuLnNjcmVlbi1yZWFkZXItdGV4dCB7XHJcbiAgY2xpcDogcmVjdCgxcHgsIDFweCwgMXB4LCAxcHgpO1xyXG4gIGhlaWdodDogMXB4O1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgcG9zaXRpb246IGFic29sdXRlICFpbXBvcnRhbnQ7XHJcbiAgd2lkdGg6IDFweDtcclxufVxyXG5cclxuLnNjcmVlbi1yZWFkZXItdGV4dDpmb2N1cyB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YxZjFmMTtcclxuICBib3JkZXItcmFkaXVzOiAzcHg7XHJcbiAgYm94LXNoYWRvdzogMCAwIDJweCAycHggcmdiYSgwLCAwLCAwLCAwLjYpO1xyXG4gIGNsaXA6IGF1dG8gIWltcG9ydGFudDtcclxuICBjb2xvcjogIzIxNzU5YjtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgZm9udC1zaXplOiAxLjRyZW07XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG4gIGxlZnQ6IDVweDtcclxuICBsaW5lLWhlaWdodDogbm9ybWFsO1xyXG4gIHBhZGRpbmc6IDE1cHggMjNweCAxNHB4O1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICB0b3A6IDVweDtcclxuICB3aWR0aDogYXV0bztcclxuICB6LWluZGV4OiAxMDAwMDA7IC8qIEFib3ZlIFdQIHRvb2xiYXIgKi9cclxufVxyXG5cclxuLyogPVdvcmRQcmVzcyBDb3JlXHJcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcbi5hbGlnbm5vbmUge1xyXG4gICAgbWFyZ2luOiA1cHggMjBweCAyMHB4IDA7XHJcbn1cclxuXHJcbi5hbGlnbmNlbnRlcixcclxuZGl2LmFsaWduY2VudGVyIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWFyZ2luOiA1cHggYXV0byA1cHggYXV0bztcclxufVxyXG5cclxuLmFsaWducmlnaHQge1xyXG4gICAgZmxvYXQ6cmlnaHQ7XHJcbiAgICBtYXJnaW46IDVweCAwIDIwcHggMjBweDtcclxufVxyXG5cclxuLmFsaWdubGVmdCB7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIG1hcmdpbjogNXB4IDIwcHggMjBweCAwO1xyXG59XHJcblxyXG5hIGltZy5hbGlnbnJpZ2h0IHtcclxuICAgIGZsb2F0OiByaWdodDtcclxuICAgIG1hcmdpbjogNXB4IDAgMjBweCAyMHB4O1xyXG59XHJcblxyXG5hIGltZy5hbGlnbm5vbmUge1xyXG4gICAgbWFyZ2luOiA1cHggMjBweCAyMHB4IDA7XHJcbn1cclxuXHJcbmEgaW1nLmFsaWdubGVmdCB7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIG1hcmdpbjogNXB4IDIwcHggMjBweCAwO1xyXG59XHJcblxyXG5hIGltZy5hbGlnbmNlbnRlciB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG59XHJcblxyXG4ud3AtY2FwdGlvbiB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2YwZjBmMDtcclxuICAgIG1heC13aWR0aDogOTYlOyAvKiBJbWFnZSBkb2VzIG5vdCBvdmVyZmxvdyB0aGUgY29udGVudCBhcmVhICovXHJcbiAgICBwYWRkaW5nOiA1cHggM3B4IDEwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbi53cC1jYXB0aW9uLmFsaWdubm9uZSB7XHJcbiAgICBtYXJnaW46IDVweCAyMHB4IDIwcHggMDtcclxufVxyXG5cclxuLndwLWNhcHRpb24uYWxpZ25sZWZ0IHtcclxuICAgIG1hcmdpbjogNXB4IDIwcHggMjBweCAwO1xyXG59XHJcblxyXG4ud3AtY2FwdGlvbi5hbGlnbnJpZ2h0IHtcclxuICAgIG1hcmdpbjogNXB4IDAgMjBweCAyMHB4O1xyXG59XHJcblxyXG4ud3AtY2FwdGlvbiBpbWcge1xyXG4gICAgYm9yZGVyOiAwIG5vbmU7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBtYXgtd2lkdGg6IDk4LjUlO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG59XHJcblxyXG4ud3AtY2FwdGlvbiBwLndwLWNhcHRpb24tdGV4dCB7XHJcbiAgICBmb250LXNpemU6IDExcHg7XHJcbiAgICBsaW5lLWhlaWdodDogMTdweDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmc6IDAgNHB4IDVweDtcclxufVxyXG5cclxuLyogVGV4dCBtZWFudCBvbmx5IGZvciBzY3JlZW4gcmVhZGVycy4gKi9cclxuLnNjcmVlbi1yZWFkZXItdGV4dCB7XHJcblx0Y2xpcDogcmVjdCgxcHgsIDFweCwgMXB4LCAxcHgpO1xyXG5cdHBvc2l0aW9uOiBhYnNvbHV0ZSAhaW1wb3J0YW50O1xyXG4gICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcblx0aGVpZ2h0OiAxcHg7XHJcblx0d2lkdGg6IDFweDtcclxuXHRvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcblxyXG4uc2NyZWVuLXJlYWRlci10ZXh0OmZvY3VzIHtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiAjZjFmMWYxO1xyXG5cdGJvcmRlci1yYWRpdXM6IDNweDtcclxuXHRib3gtc2hhZG93OiAwIDAgMnB4IDJweCByZ2JhKDAsIDAsIDAsIDAuNik7XHJcblx0Y2xpcDogYXV0byAhaW1wb3J0YW50O1xyXG5cdGNvbG9yOiAjMjE3NTliO1xyXG5cdGRpc3BsYXk6IGJsb2NrO1xyXG5cdGZvbnQtc2l6ZTogMTRweDtcclxuXHRmb250LXNpemU6IDAuODc1cmVtO1xyXG5cdGZvbnQtd2VpZ2h0OiBib2xkO1xyXG5cdGhlaWdodDogYXV0bztcclxuXHRsZWZ0OiA1cHg7XHJcblx0bGluZS1oZWlnaHQ6IG5vcm1hbDtcclxuXHRwYWRkaW5nOiAxNXB4IDIzcHggMTRweDtcclxuXHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcblx0dG9wOiA1cHg7XHJcblx0d2lkdGg6IGF1dG87XHJcblx0ei1pbmRleDogMTAwMDAwOyAvKiBBYm92ZSBXUCB0b29sYmFyLiAqL1xyXG59IiwiLnNpdGUtaGVhZGVyIHtcclxuICAgIC5zaXRlLWJyYW5kaW5nIHtcclxuICAgICAgICBtYXgtd2lkdGg6IDI1JTtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XHJcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICAgICAgXHJcbiAgICAgICAgYSB7XHJcbiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICAgICAgY29sb3I6IGJsYWNrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIC5zaXRlLXRpdGxlIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAyLjJlbTtcclxuICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgLnRpdGxlLWJsb2NrIHtcclxuICAgICAgICBtYXJnaW46IDNyZW0gYXV0bztcclxuICAgICAgICBtYXgtd2lkdGg6IDc0MHB4O1xyXG4gICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgd2lkdGg6IGF1dG87XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIFxyXG4gICAgICAgIC5zaXRlLXRpdGxlIHtcclxuICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgICAgICBjb2xvcjogJGRhcmtlci1ncmV5O1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAuc2l0ZS1kZXNjcmlwdGlvbiB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xyXG4gICAgICAgICAgICBjb2xvcjogJG1lZGl1bS1ncmV5O1xyXG4gICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4ubmF2LWJhciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZmxhdC1ncmVlbjtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG4gICAgXHJcbiAgICBhIHtcclxuICAgICAgICBmb250LWZhbWlseTogJHNhbnMtc2VyaWY7XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgfVxyXG59IiwibmF2IHtcclxuICBmbG9hdDogcmlnaHQ7XHJcbiAgICBcclxuICB1bCB7XHJcbiAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgICAgXHJcbiAgICBsaSB7XHJcbiAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgICAgICAgXHJcbiAgICAgIGEge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIHBhZGRpbmc6IDAgMTBweDtcclxuICAgICAgICBsaW5lLWhlaWdodDogJG5hdi1oZWlnaHQ7XHJcbiAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICAgIFxyXG4gICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgYmFja2dyb3VuZDogJGNsb3VkcztcclxuICAgICAgICAgIGNvbG9yOiBibGFjaztcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgdWwgbGkge1xyXG4gICAgICAgIG1pbi13aWR0aDogMTkwcHg7XHJcbiAgICAgICAgICBcclxuICAgICAgICAmIGEge1xyXG4gICAgICAgICAgcGFkZGluZzogMTVweDtcclxuICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyMHB4O1xyXG4gICAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5uYXYtZHJvcGRvd24ge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBkaXNwbGF5OiBub25lO1xyXG4gIHotaW5kZXg6IDE7XHJcbiAgYm94LXNoYWRvdzogMCAzcHggMTJweCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xyXG59XHJcblxyXG4ubmF2LW1vYmlsZSB7XHJcbiAgZGlzcGxheTogbm9uZTtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiAwO1xyXG4gIHJpZ2h0OiAwO1xyXG4gIGJhY2tncm91bmQ6ICRjbG91ZHM7XHJcbiAgaGVpZ2h0OiAkbmF2LWhlaWdodDtcclxuICB3aWR0aDogJG5hdi1oZWlnaHQ7XHJcbn1cclxuXHJcbiNuYXYtdG9nZ2xlIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgbGVmdDogMThweDtcclxuICB0b3A6IDE3cHg7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIHBhZGRpbmc6IDEwcHggMzVweCAxNnB4IDBweDtcclxuICAgIFxyXG4gIHNwYW4sXHJcbiAgc3BhbjpiZWZvcmUsXHJcbiAgc3BhbjphZnRlciB7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxcHg7XHJcbiAgICBoZWlnaHQ6IDVweDtcclxuICAgIHdpZHRoOiAzNXB4O1xyXG4gICAgYmFja2dyb3VuZDogJGRhcmtlci1ncmV5O1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBjb250ZW50OiAnJztcclxuICAgIHRyYW5zaXRpb246IGFsbCAzMDBtcyBlYXNlLWluLW91dDtcclxuICB9XHJcbiAgICBcclxuICBzcGFuOmJlZm9yZSB7XHJcbiAgICB0b3A6IC0xMHB4O1xyXG4gIH1cclxuICAgIFxyXG4gIHNwYW46YWZ0ZXIge1xyXG4gICAgYm90dG9tOiAtMTBweDtcclxuICB9XHJcbiAgICBcclxuICAmLmFjdGl2ZSBzcGFuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgICBcclxuICAgICY6YmVmb3JlLFxyXG4gICAgJjphZnRlciB7XHJcbiAgICAgIHRvcDogMDtcclxuICAgIH1cclxuICAgICAgXHJcbiAgICAmOmJlZm9yZSB7XHJcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcclxuICAgIH1cclxuICAgICAgXHJcbiAgICAmOmFmdGVyIHtcclxuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogJHRhYmxldCkge1xyXG4gIC5uYXYtbW9iaWxlIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gIH1cclxuICAgIFxyXG4gICBuYXYge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiAzcHggMCAxMHB4O1xyXG4gICAgICAgXHJcbiAgICB1bCB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIFxyXG4gICAgICBsaSB7XHJcbiAgICAgICAgZmxvYXQ6IG5vbmU7XHJcbiAgICAgICAgICBcclxuICAgICAgICAgYSB7XHJcbiAgICAgICAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgICAgICAgbGluZS1oZWlnaHQ6IDIwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICAgXHJcbiAgICAgICAgdWwgbGkgYSB7XHJcbiAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDMwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIFxyXG4gLm5hdi1kcm9wZG93biB7XHJcbiAgIHBvc2l0aW9uOiBzdGF0aWM7XHJcbiAgfVxyXG59XHJcblxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkdGFibGV0KSB7XHJcbiAgLm5hdi1saXN0IHtcclxuICAgICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcclxuICB9XHJcbn1cclxuXHJcbi5uYXZiYXIge1xyXG4gICAgaGVpZ2h0OiAkbmF2LWhlaWdodDtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgei1pbmRleDogMTA7XHJcbiAgICBcclxuICAgIGEge1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiAkc2Fucy1zZXJpZjtcclxuICAgICAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5jb250YWluZXIge1xyXG4gICAgbWF4LXdpZHRoOiAkb3V0ZXItY29udGVudC13aWR0aDtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG59XHJcblxyXG4uYnJhbmQge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgcGFkZGluZy1sZWZ0OiAyMHB4O1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICBsaW5lLWhlaWdodDogJG5hdi1oZWlnaHQ7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgZm9udC1zaXplOiAxLjRlbTtcclxuICAgIFxyXG4gIGEsXHJcbiAgYTp2aXNpdGVkIHtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICB9XHJcbn0iLCIuY29udGVudC1hcmVhIHtcclxuICAgIG1hcmdpbjogM3JlbSBhdXRvO1xyXG4gICAgbWF4LXdpZHRoOiA3NDBweDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICB3aWR0aDogYXV0bztcclxufVxyXG5cclxuLnBvc3Qge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgICAtd2Via2l0LWJveC1zaGFkb3c6IDJweCAycHggNnB4IDBweCByZ2JhKDAsMCwwLDAuMDUpO1xyXG4gICAgLW1vei1ib3gtc2hhZG93OiAycHggMnB4IDZweCAwcHggcmdiYSgwLDAsMCwwLjA1KTtcclxuICAgIGJveC1zaGFkb3c6IDJweCAycHggNnB4IDBweCByZ2JhKDAsMCwwLDAuMDUpO1xyXG4gICAgXHJcbiAgICAuZW50cnktaGVhZGVyIHtcclxuICAgICAgICBwYWRkaW5nOiAzZW0gM2VtIDA7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIFxyXG4gICAgICAgIC5lbnRyeS1tZXRhIHtcclxuICAgICAgICAgICAgY29sb3I6ICRtZWRpdW0tZ3JleTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgLmVudHJ5LXRpdGxlIHtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6ICRzZXJpZjtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogMDtcclxuICAgICAgICAgICAgY29sb3I6ICRkYXJrZXItZ3JleTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGEge1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAkaGVhZGVyLXNpemU7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogJGRhcmtlci1ncmV5O1xyXG4gICAgICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogJGxpbmstY29sb3I7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC5lbnRyeS1jb250ZW50IHtcclxuICAgICAgICBwYWRkaW5nOiAwIDNlbSAxZW07XHJcbiAgICAgICAgXHJcbiAgICAgICAgcCB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDEuNjE4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgLmVudHJ5LWZvb3RlciB7XHJcbiAgICAgICAgY29sb3I6ICRtZWRpdW0tZ3JleTtcclxuICAgICAgICBwYWRkaW5nOiAwIDNlbSAzZW07XHJcbiAgICB9XHJcbn1cclxuXHJcbi8qIFwiUmVhZCBtb3JlXCIgbGluayAqL1xyXG4ubW9yZS1saW5rIHtcclxuICAgIGNvbG9yOiAjYTA5YTkyO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IGxvd2VyY2FzZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgXHJcbiAgICAmOnZpc2l0ZWQge1xyXG4gICAgICAgIGNvbG9yOiAjYTA5YTkyO1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiBsb3dlcmNhc2U7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgICBjb2xvcjogJGxpbmstY29sb3I7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICY6YmVmb3JlIHtcclxuICAgICAgICBjb250ZW50OiBcIntcIjtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmU7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjVlbTtcclxuICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICAgICAgcGFkZGluZzogMCAxMHB4O1xyXG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiAtMC4xNWVtO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmOmFmdGVyIHtcclxuICAgICAgICBjb250ZW50OiBcIn1cIjtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmU7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjVlbTtcclxuICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICAgICAgcGFkZGluZzogMCAxMHB4O1xyXG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiAtMC4xNWVtO1xyXG4gICAgfVxyXG59XHJcblxyXG4vKiBJbi1wYWdlIG9yIGluLXBvc3QgbmF2aWdhdGlvbiAqL1xyXG4ucGFnaW5hdGlvbiB7XHJcbiAgICBtYXJnaW4tdG9wOiAycmVtO1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgICBcclxuICAgIC5wcmV2aW91cyB7XHJcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICAgICAgd2lkdGg6IDUwJTtcclxuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgfVxyXG5cclxuICAgIC5uZXh0IHtcclxuICAgICAgICBmbG9hdDogcmlnaHQ7XHJcbiAgICAgICAgd2lkdGg6IDUwJTtcclxuICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgYSB7XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgIGNvbG9yOiAkbWVkaXVtLWdyZXk7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICBcclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgY29sb3I6ICRsaW5rLWNvbG9yO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAubWV0YS1uYXYge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4ucHJldmlvdXMgLm1ldGEtbmF2IGE6YmVmb3JlLFxyXG4ubmV4dCAubWV0YS1uYXYgYTphZnRlcixcclxuLnByZXZpb3VzIGEgLm1ldGEtbmF2OmJlZm9yZSxcclxuLm5leHQgYSAubWV0YS1uYXY6YWZ0ZXIge1xyXG4gIGJvcmRlcjogc29saWQgdHJhbnNwYXJlbnQgNHB4O1xyXG4gIGNvbnRlbnQ6IFwiXCI7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIGhlaWdodDogMDtcclxuICBtYXJnaW46IDAgMC41cmVtO1xyXG4gIHRvcDogMC44ZW07XHJcbiAgd2lkdGg6IDA7XHJcbn1cclxuXHJcbi5wcmV2aW91cyAubWV0YS1uYXYgYTpiZWZvcmUsXHJcbi5wcmV2aW91cyBhIC5tZXRhLW5hdjpiZWZvcmUge1xyXG4gIGJvcmRlci1sZWZ0OiAwO1xyXG4gIGJvcmRlci1yaWdodC1jb2xvcjogJG1lZGl1bS1ncmV5O1xyXG59XHJcblxyXG4ubmV4dCAubWV0YS1uYXYgYTphZnRlcixcclxuLm5leHQgYSAubWV0YS1uYXY6YWZ0ZXIge1xyXG4gIGJvcmRlci1sZWZ0LWNvbG9yOiAkbWVkaXVtLWdyZXk7XHJcbiAgYm9yZGVyLXJpZ2h0OiAwO1xyXG59XHJcblxyXG4vKiBFbnRyeSBjb250ZW50ICovXHJcbmFydGljbGUgKyBhcnRpY2xlIHtcclxuICBtYXJnaW4tdG9wOiA2cmVtO1xyXG59IiwiLnBhZ2Uge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJG9mZi13aGl0ZTtcclxuICAgIC13ZWJraXQtYm94LXNoYWRvdzogMnB4IDJweCA2cHggMHB4IHJnYmEoMCwwLDAsMC4wNSk7XHJcbiAgICAtbW96LWJveC1zaGFkb3c6IDJweCAycHggNnB4IDBweCByZ2JhKDAsMCwwLDAuMDUpO1xyXG4gICAgYm94LXNoYWRvdzogMnB4IDJweCA2cHggMHB4IHJnYmEoMCwwLDAsMC4wNSk7XHJcbiAgICBwYWRkaW5nOiAzZW0gM2VtIDNlbTtcclxuXHJcbiAgICAuZW50cnktaGVhZGVyIHtcclxuICAgICAgICBwYWRkaW5nOiAzZW0gM2VtIDA7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIFxyXG4gICAgICAgIC5lbnRyeS1tZXRhIHtcclxuICAgICAgICAgICAgY29sb3I6ICRtZWRpdW0tZ3JleTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgLmVudHJ5LXRpdGxlIHtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6ICRzZXJpZjtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogMDtcclxuICAgICAgICAgICAgY29sb3I6ICRkYXJrZXItZ3JleTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGEge1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAkaGVhZGVyLXNpemU7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogJGRhcmtlci1ncmV5O1xyXG4gICAgICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogJGxpbmstY29sb3I7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC5lbnRyeS1jb250ZW50IHtcclxuICAgICAgICBwYWRkaW5nOiAwIDNlbSAxZW07XHJcbiAgICAgICAgXHJcbiAgICAgICAgcCB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDEuNjE4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgLmVudHJ5LWZvb3RlciB7XHJcbiAgICAgICAgY29sb3I6ICRtZWRpdW0tZ3JleTtcclxuICAgICAgICBwYWRkaW5nOiAwIDNlbSAzZW07XHJcbiAgICB9XHJcbn0iLCIuc2hhZG93LWJveCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICAgIG1hcmdpbi10b3A6IDJyZW07XHJcbiAgICBwYWRkaW5nOiAxZW0gM2VtIDNlbTtcclxuICAgIC13ZWJraXQtYm94LXNoYWRvdzogMnB4IDJweCA2cHggMHB4IHJnYmEoMCwwLDAsMC4wNSk7XHJcbiAgICAtbW96LWJveC1zaGFkb3c6IDJweCAycHggNnB4IDBweCByZ2JhKDAsMCwwLDAuMDUpO1xyXG4gICAgYm94LXNoYWRvdzogMnB4IDJweCA2cHggMHB4IHJnYmEoMCwwLDAsMC4wNSk7XHJcbn0iLCIuc2l0ZS1pbmZvIHtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIGNvbG9yOiAkZGFya2VyLWdyZXk7XHJcbiAgICBtYXJnaW46IDFyZW0gYXV0bztcclxuICAgIG1heC13aWR0aDogNjgwcHg7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5zaXRlLWZvb3RlciB7XHJcbiAgICBib3JkZXItdG9wOiAxcHggc29saWQgJGNyZWFtO1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbn0iXX0= */
